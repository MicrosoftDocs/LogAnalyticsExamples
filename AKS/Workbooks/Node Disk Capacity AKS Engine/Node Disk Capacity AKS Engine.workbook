{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "_More information about the metrics in this workbook is available <a href='https://github.com/influxdata/telegraf/tree/master/plugins/inputs/disk'>here</a>_"
      },
      "name": "text - 15"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "08bdcd8f-68e6-42c1-b82a-7302463d8901",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time Range",
            "type": 4,
            "description": "Filter by time range",
            "isRequired": true,
            "value": {
              "durationMs": 1800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "a9d18789-a7eb-4fe4-b679-a26a835615a8",
            "version": "KqlParameterItem/1.0",
            "name": "selectedNodes1",
            "label": "Node",
            "type": 2,
            "description": "Filter by node",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| extend Tags = todynamic(Tags)\r\n| project HostName = tostring(Tags.hostName)\r\n| distinct HostName\r\n| project value = HostName, label = HostName, selected = false\r\n| sort by label asc\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "bdb126c9-59e6-46af-b2a4-59a0511b94d3",
            "version": "KqlParameterItem/1.0",
            "name": "selectedDevices1",
            "label": "Device",
            "type": 2,
            "description": "Filter by device",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| extend Tags = todynamic(Tags)\r\n| project HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| distinct Device\r\n| project value = Device, label = Device, selected = false\r\n| sort by label asc\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "0d3faddf-bf4f-479e-ace2-7ccae85eff1c",
            "version": "KqlParameterItem/1.0",
            "name": "clusterId",
            "type": 1,
            "value": "",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ]
            }
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "dropdowns"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"border: 1px solid grey\"></div>"
      },
      "name": "text - 12 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let usedDiskUnhealthyThreshold = 90;\r\nlet usedDiskCriticalThreshold = 99;\r\nlet data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| where Name == 'used_percent'\r\n| extend ClusterID = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where \"*\" in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where \"*\" in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| where ClusterID =~ tostring('{clusterId}')\r\n| summarize UsedDisk = max(Val) by NodeDisk\r\n| extend State = iff(UsedDisk >= usedDiskCriticalThreshold, 'Critical disks', iif((UsedDisk >= usedDiskUnhealthyThreshold and UsedDisk < usedDiskCriticalThreshold), 'Unhealthy disks', 'Healthy disks'));\r\ndata\r\n| summarize Count = count(), Disks = makeset(NodeDisk) by State\r\n| union (\r\n    data\r\n    | summarize Count = count(), Disks = dynamic([\"*\"])\r\n    | extend State = 'All disks'\r\n)\r\n| join kind = fullouter (datatable (State: string) ['All disks', 'Critical disks', 'Unhealthy disks', 'Healthy disks']) on State\r\n| extend Count = iff(State == '', 0, Count), Disks = iff(State == '', dynamic([]), Disks)\r\n| order by Count desc\r\n",
        "size": 4,
        "aggregation": 2,
        "title": "💡 Click on a tile to filter by disks in that state",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "timeBrushParameterName": "filteredTimeRange",
        "exportFieldName": "Disks",
        "exportParameterName": "DisksOfSelectedState",
        "exportDefaultValue": "[\"*\"]",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "State1",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "min": 0,
              "palette": "blue",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2
              }
            }
          },
          "showBorder": false
        }
      },
      "name": "tiles"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"border: 1px solid grey\"></div>\r\n<br/>\r\n"
      },
      "name": "text - 12"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "a3f05500-bcb2-4247-b678-e3245ac4dc60",
            "version": "KqlParameterItem/1.0",
            "name": "topN",
            "label": "Show",
            "type": 2,
            "description": "Show the top N disks by used disk % in the chart below",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"value\": 3, \"label\": \"Top 3\", \"selected\": \"true\" },\r\n    { \"value\": 5, \"label\": \"Top 5\", \"selected\": \"false\" },\r\n    { \"value\": 10, \"label\": \"Top 10\", \"selected\": \"false\" },\r\n    { \"value\": 15, \"label\": \"Top 15\", \"selected\": \"false\" },\r\n    { \"value\": 1000, \"label\": \"All\", \"selected\": \"false\" }\r\n]"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 11"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>{topN:label} Disks by Used Disk %</h3>"
      },
      "name": "text - 12"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let selectedStateDisks = dynamic({DisksOfSelectedState});\r\nlet data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| where Name == 'used_percent'\r\n| extend ClusterID = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where \"*\" in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where \"*\" in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| where ClusterID =~ tostring('{clusterId}')\r\n| where NodeDisk in (selectedStateDisks) or '*' in (selectedStateDisks);\r\nlet mostUsedDisks = data\r\n| top-nested {topN} of NodeDisk by MaxVal = max(Val);\r\ndata\r\n| where NodeDisk in (mostUsedDisks)\r\n| make-series ['Used Disk %'] = max(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by NodeDisk\r\n",
        "size": 0,
        "aggregation": 2,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "showPin": true,
      "name": "top-used-disk-grid"
    },
    {
      "type": 1,
      "content": {
        "json": "<br/>\r\n<div style=\"border: 1px solid grey\"></div>\r\n<br/>\r\n"
      },
      "name": "text - 14"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Disk Capacity Overview</h3>"
      },
      "name": "text - 13"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let selectedStateDisks = dynamic({DisksOfSelectedState});\r\nlet data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| where Name == 'used_percent' or Name == 'free'\r\n| extend ClusterID = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where \"*\" in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where \"*\" in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| where ClusterID =~ tostring('{clusterId}')\r\n| where NodeDisk in (selectedStateDisks) or '*' in (selectedStateDisks);\r\nlet usedPercent = data\r\n| where Name == 'used_percent';\r\nlet free = data\r\n| where Name == 'free';\r\nlet worstDisksPerNode = usedPercent\r\n| partition by HostName (\r\n    summarize UsedPercent = max(Val) by HostName, Device, NodeDisk\r\n    | top 1 by UsedPercent desc\r\n);\r\nusedPercent // used percent for devices\r\n| summarize UsedPercent = max(Val) by HostName, Device\r\n| join kind = inner (\r\n    usedPercent \r\n    | make-series UsedPercentTrend = max(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project Id = strcat(HostName, Device), Name = strcat('🔹 ', Device), ParentId = HostName, Kind = 'Device', UsedPercent, UsedPercentTrend\r\n| union ( // used percent for nodes\r\n    usedPercent\r\n    | summarize UsedPercent = max(Val) by HostName\r\n    | join kind = inner (\r\n        usedPercent \r\n        | make-series UsedPercentTrend = max(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName\r\n    ) on HostName\r\n    | project Id = HostName, Name = strcat('🖥️ ', HostName), ParentId = '', Kind = 'Node', UsedPercent, UsedPercentTrend\r\n)\r\n| join kind = inner (\r\n    free // free space for devices\r\n    | summarize Free = min(Val) by HostName, Device\r\n    | join kind = inner (\r\n        free    \r\n        | make-series FreeTrend = min(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n    ) on HostName\r\n    | where Device == Device1\r\n    | project Id = strcat(HostName, Device), Name = Device, ParentId = HostName, Kind = 'Device', Free, FreeTrend\r\n    | union ( // free space for nodes\r\n        free\r\n        | summarize Free = min(Val) by HostName, Device\r\n        | join kind = inner ( // match the set of node-disk free space data to the nodes with the worst used percent data for setting the data in the node rows\r\n            worstDisksPerNode\r\n        ) on HostName, Device\r\n        | join kind = inner (\r\n            free \r\n            | make-series FreeTrend = min(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step  {timeRange:grain} by HostName, Device\r\n            | join kind = inner (\r\n                worstDisksPerNode\r\n            ) on HostName, Device\r\n        ) on HostName\r\n        | project Id = HostName, Name = HostName, ParentId = '', Kind = 'Node', Free, FreeTrend\r\n    )\r\n) on Id\r\n| project-away Id1, Name1, ParentId1, Kind1\r\n| project-rename ['Used Disk % (Max)'] = UsedPercent, ['Used Disk % Trend (Max)'] = UsedPercentTrend, ['Free Disk Space (Min)'] = Free, ['Free Disk Space Trend (Min)'] = FreeTrend\r\n| order by ['Used Disk % (Max)'] desc, Name asc",
        "size": 0,
        "showAnalytics": true,
        "title": "💡 Click on a row to see the metrics for the node or device charted below over the selected time range",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "exportFieldName": "",
        "exportParameterName": "selectedRow",
        "exportDefaultValue": "{\"Kind\":\"Unselected\"}",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Kind",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Used Disk % (Max)",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">=",
                    "thresholdValue": "99",
                    "representation": "critical",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">=",
                    "thresholdValue": "90",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 1,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Used Disk % Trend (Max)",
              "formatter": 9,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "greenRed",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Free Disk Space (Min)",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 2,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Free Disk Space Trend (Min)",
              "formatter": 9,
              "formatOptions": {
                "min": 0,
                "palette": "blueDark",
                "showIcon": true
              }
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "idColumn": "Id",
            "parentColumn": "ParentId",
            "treeType": 0,
            "expanderColumn": "Name",
            "expandTopLevel": true
          }
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Id",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "Used percent (p95)",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "showPin": true,
      "name": "overview-grid"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ac479e36-f134-4734-a5ba-2c03df30d0e0",
            "version": "KqlParameterItem/1.0",
            "name": "selectedRowId",
            "type": 1,
            "description": "The Id of the row selected in the grid",
            "isRequired": true,
            "query": "let selectedStateDisks = dynamic({DisksOfSelectedState});\r\nlet row = dynamic({selectedRow}).Id;\r\nlet usedPercent = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| where Name == 'used_percent'\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device)), ClusterId = Tags['container.azm.ms/clusterId']\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where \"*\" in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where \"*\" in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| where NodeDisk in (selectedStateDisks) or '*' in (selectedStateDisks);\r\nlet worstDiskAcrossNodes = toscalar(\r\n    usedPercent\r\n    | summarize UsedPercent = max(Val) by NodeDisk\r\n    | top 1 by UsedPercent desc\r\n    | project NodeDisk\r\n); \r\nprint(iif(isempty(row), worstDiskAcrossNodes, row))",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "selected-row-id"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Details for <span style=\"text-decoration: underline\">{selectedRowId}</span>:</h3>"
      },
      "name": "text - 13 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let selectedStateDisks = dynamic({DisksOfSelectedState});\r\nlet usedPercent = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| where Name == 'used_percent'\r\n| extend ClusterID = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterID =~ tostring('{clusterId}')\r\n| where NodeDisk in (selectedStateDisks) or '*' in (selectedStateDisks);\r\nlet row = dynamic({selectedRow});\r\nlet worstDiskAcrossNodes = usedPercent\r\n| summarize UsedPercent = max(Val) by NodeDisk\r\n| top 1 by UsedPercent desc;\r\nusedPercent\r\n| where (row.Kind == 'Unselected') or (row.Kind == 'Node' and row.Id == HostName) or (row.Kind == 'Device' and row.Id == NodeDisk)\r\n| make-series ['Used Disk %'] = max(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by NodeDisk\r\n| where NodeDisk contains iff(row.Kind == 'Unselected', toscalar(worstDiskAcrossNodes | project NodeDisk), '')",
        "size": 0,
        "aggregation": 2,
        "showAnalytics": true,
        "title": "Used Disk %",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "linechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "used-disk-space-chart"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let selectedStateDisks = dynamic({DisksOfSelectedState});\r\nlet data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| where Name == 'used_percent' or Name == 'free'\r\n| extend ClusterID = extractjson(\"$['container.azm.ms/clusterId']\", Tags, typeof(string))\r\n| extend Tags = todynamic(Tags)\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterID =~ tostring('{clusterId}')\r\n| where NodeDisk in (selectedStateDisks) or '*' in (selectedStateDisks);\r\nlet usedPercent = data\r\n| where Name == 'used_percent';\r\nlet free = data\r\n| where Name == 'free'\r\n| extend Val = Val / 1073741824;\r\nlet row = dynamic({selectedRow});\r\nlet worstDiskAcrossNodes = usedPercent\r\n| summarize UsedPercent = max(Val) by NodeDisk\r\n| top 1 by UsedPercent desc;\r\nfree\r\n| where (row.Kind == 'Unselected') or (row.Kind == 'Node' and row.Id == HostName) or (row.Kind == 'Device' and row.Id == NodeDisk)\r\n| make-series ['Free Disk Space'] = min(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by NodeDisk\r\n| where NodeDisk contains iff(row.Kind == 'Unselected', toscalar(worstDiskAcrossNodes | project NodeDisk), '')",
        "size": 0,
        "aggregation": 1,
        "showAnalytics": true,
        "title": "Free Disk Space (GiB)",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "linechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "free-disk-space-chart"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}