{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "_More information about the metrics in this workbook is available <a href='https://github.com/influxdata/telegraf/tree/master/plugins/inputs/diskio'>here</a>_"
      },
      "name": "text - 18"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "e2b5cd30-7276-477f-a6bb-07da25ba5e5f",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time Range",
            "type": 4,
            "description": "Filter data by time range",
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 1800000
            }
          },
          {
            "id": "4c9a0f80-fa3e-44af-8f0d-6744ecf503c6",
            "version": "KqlParameterItem/1.0",
            "name": "unit",
            "label": "Unit",
            "type": 2,
            "description": "The units to use for the data",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"label\": \"Bytes\", \"value\": \"1\", \"selected\": \"true\" },\r\n    { \"label\": \"Kilobytes\", \"value\": \"1000\", \"selected\": \"false\" },\r\n    { \"label\": \"Megabytes\", \"value\": \"1000000\", \"selected\": \"false\" },\r\n    { \"label\": \"Gigabytes\", \"value\": \"1000000000\", \"selected\": \"false\" }\r\n]"
          },
          {
            "id": "164c1cb5-5587-47de-994b-4b3251526f73",
            "version": "KqlParameterItem/1.0",
            "name": "aggregation1",
            "label": "Aggregation",
            "type": 2,
            "description": "Choose which data aggregation you want to visualize on the time chart",
            "value": "Average",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"label\": \"Max\", \"value\": \"Max\" },\r\n    { \"label\": \"Average\", \"value\": \"Average\" },\r\n    { \"label\": \"Min\", \"value\": \"Min\" }\r\n]",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "f126ca9e-5dbb-4b5c-89bd-7568f9b75367",
            "version": "KqlParameterItem/1.0",
            "name": "selectedNodes1",
            "label": "Node",
            "type": 2,
            "description": "Filter by node",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "InsightsMetrics\r\n| where Origin =~ 'container.azm.ms/telegraf'\r\n| where Namespace =~ 'container.azm.ms/diskio'\r\n| extend Tags = todynamic(Tags)\r\n| project HostName = tostring(Tags.hostName)\r\n| distinct HostName\r\n| sort by HostName asc\r\n\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "c8a9d7cf-eb5c-4bfb-a4ab-3481767ec8db",
            "version": "KqlParameterItem/1.0",
            "name": "selectedDevices1",
            "label": "Device",
            "type": 2,
            "description": "Filter by device",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| extend Tags = todynamic(Tags)\r\n| project HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| distinct Device\r\n| project value = Device, label = Device, selected = false\r\n| sort by label asc\r\n\r\n",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "09c00b1b-cc62-44d9-a244-48ead4ddd23a",
            "version": "KqlParameterItem/1.0",
            "name": "clusterId",
            "type": 1,
            "description": "Filter the selected workspace by clusterId",
            "isHiddenWhenLocked": true,
            "value": "david-aks-engine-test"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "dropdowns"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"border: 1px solid gray\"></div>"
      },
      "name": "text - 21"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Disk IO Overview</h3>"
      },
      "name": "text - 24"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = InsightsMetrics\r\n| where Origin =~ 'container.azm.ms/telegraf'\r\n| where Namespace =~ 'container.azm.ms/diskio'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| extend partitionKey = strcat(NodeDisk, '/', Name)\r\n| order by partitionKey asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(partitionKey) != partitionKey, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(partitionKey) != partitionKey, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val, Val - PrevVal)\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, PrevTimeGenerated, HostName, Device, NodeDisk, Name, Rate;\r\nlet bytesRead = data\r\n| where Name == 'read_bytes'\r\n| extend Rate = iif(TimeGenerated == PrevTimeGenerated, 0.0, Rate / datetime_diff('Second', TimeGenerated, PrevTimeGenerated));\r\nlet msPerByteRead = data\r\n| where Name == 'read_bytes'\r\n| extend Rate = iif(Rate < 0, 0.0, (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000) / Rate);\r\nlet bytesWritten = data\r\n| where Name == 'write_bytes'\r\n| extend Rate = iif(TimeGenerated == PrevTimeGenerated, 0.0, Rate / datetime_diff('Second', TimeGenerated, PrevTimeGenerated));\r\nlet msPerByteWritten = data\r\n| where Name == 'write_bytes'\r\n| extend Rate = iif(Rate < 0, 0.0, (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000) / Rate);\r\nlet iopsInFlight = data\r\n| where Name == 'iops_in_progress'\r\n| extend Rate = iif(Rate < 0, 0.0, Rate);\r\nlet diskBusy = data\r\n| where Name == 'io_time'\r\n| extend Rate = iif(TimeGenerated == PrevTimeGenerated, 0.0, Rate/(datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000));\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nlet bytesReadTableData = bytesRead // bytes read per sec \r\n| summarize BytesReadPerSecond = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) by HostName, Device // for devices, group by parentId (HostName) in workbook config\r\n| join kind = inner (\r\n    bytesRead\r\n    | make-series BytesReadPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project Id = strcat(HostName, Device), HostName, Device, Name = strcat('🔹 ', Device), ParentId = strcat('🖥️ ', HostName), Kind = 'Device', BytesReadPerSecond, BytesReadPerSecondTrend;\r\nlet bytesWrittenTableData = bytesWritten // bytes witten per sec \r\n| summarize BytesWrittenPerSecond = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) by HostName, Device // for devices\r\n| join kind = inner (\r\n    bytesWritten\r\n    | make-series BytesWrittenPerSecondTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project Id = strcat(HostName, Device), HostName, Device, Name = strcat('🔹 ', Device), ParentId = strcat('🖥️ ', HostName), Kind = 'Device', BytesWrittenPerSecond, BytesWrittenPerSecondTrend;\r\nlet diskBusyTableData = diskBusy // disk busy\r\n| summarize DiskBusy = max(Rate) by HostName, Device // for devices, group by parentId (HostName) in workbook config\r\n| join kind = inner (\r\n    diskBusy\r\n    | make-series DiskBusyTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project Id = strcat(HostName, Device), HostName, Device, Name = strcat('🔹 ', Device), ParentId = strcat('🖥️ ', HostName), Kind = 'Device', DiskBusy, DiskBusyTrend;\r\nlet iopsTableData = iopsInFlight // iops\r\n| summarize IOPS = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) by HostName, Device // for devices, group by parentId (HostName) in workbook config\r\n| join kind = inner (\r\n    iopsInFlight\r\n    | make-series IOPSTrend = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n) on HostName\r\n| where Device == Device1\r\n| project Id = strcat(HostName, Device), HostName, Device, Name = strcat('🔹 ', Device), ParentId = strcat('🖥️ ', HostName), Kind = 'Device', IOPS, IOPSTrend;\r\nbytesReadTableData\r\n| join kind = inner ( bytesWrittenTableData ) on Id\r\n| join kind = inner ( diskBusyTableData ) on Id\r\n| join kind = inner ( iopsTableData ) on Id\r\n| project-away Id1, Name1, ParentId1, Kind1, Id2, Name2, ParentId2, Kind2, Id3, Name3, ParentId3, Kind3, Device1, Device2, Device3, HostName1, HostName2, HostName3\r\n| project-rename ['Read Bytes/sec'] = BytesReadPerSecond, ['Read Bytes/sec Trend'] = BytesReadPerSecondTrend, ['Write Bytes/sec'] = BytesWrittenPerSecond, ['Write Bytes/sec Trend'] = BytesWrittenPerSecondTrend, ['% Disk Busy'] = DiskBusy, ['% Disk Busy Trend'] = DiskBusyTrend, ['IOPS Trend'] = IOPSTrend\r\n| order by Id asc\r\n| project-rename FullId = Id, GridId = Name, Name = ParentId",
        "size": 0,
        "exportParameterName": "selectedRow",
        "exportDefaultValue": "{\"Kind\":\"Unselected\"}",
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "FullId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "HostName",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Device",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "GridId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Kind",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Read Bytes/sec",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 11,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Read Bytes/sec Trend",
              "formatter": 9,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Write Bytes/sec",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 11,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Write Bytes/sec Trend",
              "formatter": 9,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "% Disk Busy",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "percent",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "% Disk Busy Trend",
              "formatter": 9,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "IOPS",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "IOPS Trend",
              "formatter": 9,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "$gen_group",
              "formatter": 0,
              "formatOptions": {
                "linkTarget": "WorkbookTemplate",
                "linkIsContextBlade": false,
                "showIcon": true,
                "workbookContext": {
                  "componentIdSource": "workbook",
                  "resourceIdsSource": "workbook",
                  "templateIdSource": "static",
                  "templateId": "Community-Workbooks/AKS/Node-Disk-IO-Cluster-Context-Pane",
                  "typeSource": "workbook",
                  "gallerySource": "workbook"
                }
              }
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Name"
            ],
            "expandTopLevel": true,
            "finalBy": "GridId"
          },
          "labelSettings": []
        }
      },
      "showPin": true,
      "name": "overview-grid"
    },
    {
      "type": 1,
      "content": {
        "json": "<br/>\r\n<div style=\"border: 1px solid grey\"></div>\r\n<br/>\r\n"
      },
      "name": "text - 21"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Read {unit:label}/sec</h3>"
      },
      "customWidth": "50",
      "name": "text - 5"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Write {unit:label}/sec</h3>"
      },
      "customWidth": "50",
      "name": "text - 5 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let bytesReadPerSec = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| where Name == 'read_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * {unit}), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * {unit})))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Device, Rate;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nbytesReadPerSec\r\n| make-series Val = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n| extend Name = strcat(HostName, Device)\r\n| project-away HostName, Device",
        "size": 0,
        "aggregation": 1,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart",
        "tileSettings": {
          "showBorder": false
        }
      },
      "customWidth": "50",
      "showPin": true,
      "name": "bytes-read-per-sec"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let bytesWritePerSec = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| where Name == 'write_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * {unit}), iif(PrevVal == Val, 0.0, (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * {unit})))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Device, Rate;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nbytesWritePerSec\r\n| make-series Val = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n| extend Name = strcat(HostName, Device)\r\n| project-away HostName, Device",
        "size": 0,
        "aggregation": 1,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "bytes-written-per-sec"
    },
    {
      "type": 1,
      "content": {
        "json": "<br/>\r\n<br/>\r\n"
      },
      "name": "text - 21"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Total {unit:label} Read ({timeRange:grain} intervals)</h3>"
      },
      "customWidth": "50",
      "name": "text - 5 - Copy - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Total {unit:label} Written ({timeRange:grain} intervals)</h3>"
      },
      "customWidth": "50",
      "name": "text - 5 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let bytesReadTotal = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| where Name == 'read_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / {unit}, iif(PrevVal == Val, 0.0, (Val - PrevVal) / {unit}))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Device, Rate;\r\nlet sum = bytesReadTotal\r\n| make-series Val = sum(Rate) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n| extend Name = strcat(HostName, Device)\r\n| project-away HostName, Device;\r\nsum",
        "size": 0,
        "aggregation": 1,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "total-bytes-read"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let bytesWrittenTotal = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| where Name == 'write_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / {unit}, iif(PrevVal == Val, 0.0, (Val - PrevVal) / {unit}))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Device, Rate;\r\nlet sum = bytesWrittenTotal\r\n| make-series Val = sum(Rate) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n| extend Name = strcat(HostName, Device)\r\n| project-away HostName, Device;\r\nsum",
        "size": 0,
        "aggregation": 1,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "total-bytes-written"
    },
    {
      "type": 1,
      "content": {
        "json": "<br/>\r\n<br/>\r\n"
      },
      "name": "text - 22"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Milliseconds Per {unit:label} Read</h3>"
      },
      "customWidth": "50",
      "name": "text - 5 - Copy - Copy - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>Milliseconds Per {unit:label} Written</h3>"
      },
      "customWidth": "50",
      "name": "text - 5 - Copy - Copy - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let msPerByteRead = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| where Name == 'read_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, pow(Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000 * {unit}), -1), pow((Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000 * {unit}), -1))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Device, Rate;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nmsPerByteRead\r\n| make-series Val = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n| extend Name = strcat(HostName, Device)\r\n| project-away HostName, Device",
        "size": 0,
        "aggregation": 2,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "ms-per-bytes-read"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let msPerByteWritten = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| where Name == 'write_bytes'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, pow(Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000 * {unit}), -1), pow((Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000 * {unit}), -1))\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, HostName, Device, Rate;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nmsPerByteWritten\r\n| make-series Val = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n| extend Name = strcat(HostName, Device)\r\n| project-away HostName, Device",
        "size": 0,
        "aggregation": 2,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "ms-per-bytes-written"
    },
    {
      "type": 1,
      "content": {
        "json": "<br/>\r\n<br/>\r\n"
      },
      "name": "text - 23"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>IOPS In Progress</h3>"
      },
      "customWidth": "50",
      "name": "text - 5 - Copy - Copy - Copy - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "<h3>% Disk Busy</h3>"
      },
      "customWidth": "50",
      "name": "text - 5 - Copy - Copy - Copy - Copy - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let iops = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| where Name == 'iops_in_progress'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| project TimeGenerated, HostName, Device, Val;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\niops\r\n| make-series Val = iif(avgOn != -1, avg(Val), iif(maxOn != -1, max(Val), min(Val))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by HostName, Device\r\n| extend Name = strcat(HostName, Device)\r\n| project-away HostName, Device",
        "size": 0,
        "aggregation": 2,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "iops-in-progress"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let ioTime = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'container.azm.ms/diskio'\r\n| where Name == 'io_time'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterId = tostring(Tags['container.azm.ms/clusterId']), HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.name))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where ClusterId =~ '{clusterId}'\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where '*' in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| order by NodeDisk asc, TimeGenerated asc\r\n| serialize\r\n| extend PrevVal = iif(prev(NodeDisk) != NodeDisk, 0.0, prev(Val)), PrevTimeGenerated = iif(prev(NodeDisk) != NodeDisk, datetime(null), prev(TimeGenerated))\r\n| where isnotnull(PrevTimeGenerated) and PrevTimeGenerated != TimeGenerated\r\n| extend Rate = iif(PrevVal > Val, Val / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000), (Val - PrevVal) / (datetime_diff('Second', TimeGenerated, PrevTimeGenerated) * 1000)) * 100\r\n| where isnotnull(Rate)\r\n| project TimeGenerated, NodeDisk, Rate;\r\nlet maxOn = indexof(\"{aggregation1}\", 'Max');\r\nlet avgOn = indexof(\"{aggregation1}\", 'Average');\r\nlet minOn = indexof(\"{aggregation1}\", 'Min');\r\nioTime\r\n| make-series Val = iif(avgOn != -1, avg(Rate), iif(maxOn != -1, max(Rate), min(Rate))) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by NodeDisk\r\n| extend Name = NodeDisk\r\n| project-away NodeDisk",
        "size": 0,
        "aggregation": 2,
        "showAnalytics": true,
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "timeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "timechart"
      },
      "customWidth": "50",
      "showPin": true,
      "name": "disk-busy-percentage"
    }
  ],
  "styleSettings": {},
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}