{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# AAD-Domain Services: Account Activity Report #"
      },
      "name": "text - 0"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "cellValue": "https://aka.ms/aadds-accountreportwb",
            "linkTarget": "Url",
            "linkLabel": "how to",
            "preText": "Learn",
            "postText": "use this workbook or customize your own",
            "style": "link"
          }
        ]
      },
      "name": "links - 0"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "ee63ceeb-6612-4328-a0d1-141346a75301",
            "version": "KqlParameterItem/1.0",
            "name": "DefaultSubscription_Internal",
            "type": 1,
            "isRequired": true,
            "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| take 1\r\n| project subscriptionId",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "153c90e6-fd6d-453e-8cff-a51e8f194311",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "query": "summarize by subscriptionId\r\n| project value = strcat(\"/subscriptions/\", subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ '{DefaultSubscription_Internal}', true, false)\r\n",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "571bbb55-a9b5-4230-a2b4-a181e5ae43be",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isRequired": true,
            "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": null
          },
          {
            "id": "ba96ec8f-64a9-42fd-a5b5-2896a07261c5",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "82dcabd6-5a30-4ead-904a-d1ade6d991ba",
            "version": "KqlParameterItem/1.0",
            "name": "TileView",
            "label": "Tile view",
            "type": 2,
            "description": "What do you want the tiles to show?",
            "isRequired": true,
            "value": "A",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"label\":\"Percentages\", \"value\":\"A\" },\r\n    { \"label\":\"Counts\", \"value\":\"B\" }\r\n]"
          },
          {
            "id": "ba102d1d-f49b-4e3a-b715-e2e79a6873b3",
            "version": "KqlParameterItem/1.0",
            "name": "name",
            "label": "Account username",
            "type": 1,
            "description": "Which user account do you want to audit?",
            "isRequired": true
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 0"
    },
    {
      "type": 1,
      "content": {
        "json": "____"
      },
      "name": "text - 1"
    },
    {
      "type": 1,
      "content": {
        "json": "## Account Security ##"
      },
      "name": "text - 2"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Q0A: Generate percentage-tiles for sign-in attempts to a given user account with result percentages\r\n// Define lookup table for auth attempt result types\r\nlet ErrorCodes = datatable(ErrorCode:string, ErrorType:string)\r\n        [ \"0xC0000064\", \"Bad Username\"\r\n        , \"0xC000006A\", \"Bad Password\"\r\n        , \"0xC000006D\", \"Generic Logon Failure\"\r\n        , \"0xC000006F\", \"Outside Authorized Hours\"\r\n        , \"0xC0000070\", \"Unauthorized Workstation\"\r\n        , \"0xC0000071\", \"Expired Password\"\r\n        , \"0xC0000072\", \"Account Disabled\"\r\n        , \"0xC0000193\", \"Account Expired\"\r\n        , \"0xC0000224\", \"Successful\"\r\n        , \"0xC0000234\", \"Account Locked Out\"\r\n        , \"0xC0000371\", \"The local account store does not contain secret material for the specified account.\"\r\n        , \"0x0\", \"Successful\"\r\n        ];\r\n// Get counts for each result type\r\nlet SourceTable = materialize(\r\n    AADDomainServicesAccountLogon\r\n    | where TimeGenerated {TimeRange:value}\r\n    | project Event_ID = extract(\".+/(.+[0-9])\",1,tostring(OperationName))\r\n            , AccountName = tolower(extract(\"Logon Account:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription)))\r\n            , ErrorCode = extract(\"Error Code:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription))\r\n    | where Event_ID == \"4776\"\r\n        and AccountName =~ '{name:value}'\r\n    | lookup kind=leftouter ErrorCodes on ErrorCode\r\n    | summarize count() by ErrorType\r\n    | extend flag = 1\r\n);\r\n// Get total count for all auth attempts\r\nlet TotalCount = materialize(\r\n    SourceTable\r\n    | summarize sum(count_)\r\n    | extend flag = 1\r\n);\r\n// Combine tables and calculate percentages\r\nlet percentTable = materialize(\r\n    SourceTable\r\n    | lookup kind=leftouter TotalCount on flag\r\n    | project ErrorType\r\n            , value = todouble(count_)\r\n            , total = todouble(sum_count_)\r\n    | project ErrorType\r\n            , percentage = (value / total) * 100\r\n);\r\n// Make and merge a table for all attempts at 100%\r\nlet totalPercent = datatable(ErrorType:string, percentage:real) [ 'All',100 ];\r\nunion withsource=TableName percentTable, totalPercent\r\n| project ErrorType\r\n        , percentage\r\n| sort by percentage",
        "size": 3,
        "exportFieldName": "ErrorType",
        "exportParameterName": "AuthResultA",
        "exportDefaultValue": "All",
        "title": "Sign-in results",
        "noDataMessage": "No sign-in attempts found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "ErrorType",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "percentage",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 1,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true,
          "sortCriteriaField": "percentage",
          "sortOrderField": 2
        }
      },
      "conditionalVisibility": {
        "parameterName": "TileView",
        "comparison": "isEqualTo",
        "value": "A"
      },
      "name": "query - 0A"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Q0B: Generate percentage-tiles for sign-in attempts to a given user account with result counts\r\n// Define lookup table for auth attempt result types\r\nlet ErrorCodes = datatable(ErrorCode:string, ErrorType:string)\r\n        [ \"0xC0000064\", \"Bad Username\"\r\n        , \"0xC000006A\", \"Bad Password\"\r\n        , \"0xC000006D\", \"Generic Logon Failure\"\r\n        , \"0xC000006F\", \"Outside Authorized Hours\"\r\n        , \"0xC0000070\", \"Unauthorized Workstation\"\r\n        , \"0xC0000071\", \"Expired Password\"\r\n        , \"0xC0000072\", \"Account Disabled\"\r\n        , \"0xC0000193\", \"Account Expired\"\r\n        , \"0xC0000224\", \"Successful\"\r\n        , \"0xC0000234\", \"Account Locked Out\"\r\n        , \"0xC0000371\", \"The local account store does not contain secret material for the specified account.\"\r\n        , \"0x0\", \"Successful\"\r\n        ];\r\n// Get counts for each result type\r\nlet SourceTable = materialize(\r\n    AADDomainServicesAccountLogon\r\n    | where TimeGenerated {TimeRange:value}\r\n    | project Event_ID = extract(\".+/(.+[0-9])\",1,tostring(OperationName))\r\n            , AccountName = tolower(extract(\"Logon Account:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription)))\r\n            , ErrorCode = extract(\"Error Code:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription))\r\n    | where Event_ID == \"4776\"\r\n        and AccountName =~ '{name:value}'\r\n    | lookup kind=leftouter ErrorCodes on ErrorCode\r\n    | summarize count() by ErrorType\r\n    | extend flag = 1\r\n);\r\n// Get total count for all auth attempts\r\nlet TotalCount = materialize(\r\n    SourceTable\r\n    | summarize count_ = sum(count_)\r\n    | extend ErrorType = \"All\"\r\n);\r\n// Combine the tables\r\nunion withsource=TableName SourceTable, TotalCount\r\n| project ErrorType\r\n        , count_\r\n| sort by count_",
        "size": 3,
        "exportFieldName": "ErrorType",
        "exportParameterName": "AuthResultB",
        "exportDefaultValue": "All",
        "title": "Sign-in results",
        "noDataMessage": "No sign-in attempts found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "ErrorType",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 0,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true,
          "sortCriteriaField": "percentage",
          "sortOrderField": 2
        }
      },
      "conditionalVisibility": {
        "parameterName": "TileView",
        "comparison": "isEqualTo",
        "value": "B"
      },
      "name": "query - 0B"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// THIS QUERY HAS TWO VERSIONS - THEY ARE IDENTICAL EXCEPT THEY USE DIFFERENT PARAMETERS FOR AUTH RESULT. THIS IS ...\r\n// ... SO THAT BOTH VERSIONS OF THE TILE OBJECT CAN CONTROL THE TIME CHART AND GRID\r\n// Q1A: Generate time-chart for sign-in attempts to a given user account with a selected auth result type - IF SHOWING PERCENTAGES\r\n// Define lookup table for auth attempt result types\r\nlet ErrorCodes = datatable(ErrorCode:string, ErrorType:string)\r\n        [ \"0xC0000064\", \"Bad Username\"\r\n        , \"0xC000006A\", \"Bad Password\"\r\n        , \"0xC000006D\", \"Generic Logon Failure\"\r\n        , \"0xC000006F\", \"Outside Authorized Hours\"\r\n        , \"0xC0000070\", \"Unauthorized Workstation\"\r\n        , \"0xC0000071\", \"Expired Password\"\r\n        , \"0xC0000072\", \"Account Disabled\"\r\n        , \"0xC0000193\", \"Account Expired\"\r\n        , \"0xC0000224\", \"Successful\"\r\n        , \"0xC0000234\", \"Account Locked Out\"\r\n        , \"0xC0000371\", \"The local account store does not contain secret material for the specified account.\"\r\n        , \"0x0\", \"Successful\"\r\n        ];\r\n// Filter down to the selected username and auth result type\r\nAADDomainServicesAccountLogon\r\n| where TimeGenerated {TimeRange:value}\r\n| project TimeGenerated\r\n        , Event_ID = extract(\".+/(.+[0-9])\",1,tostring(OperationName))\r\n        , AccountName = tolower(extract(\"Logon Account:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription)))\r\n        , ErrorCode = extract(\"Error Code:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription))\r\n| where Event_ID == \"4776\"\r\n    and AccountName =~ '{name:value}'\r\n| lookup kind=leftouter ErrorCodes on ErrorCode\r\n| extend ErrorFlag = \"All\" // Defined because boolean checks must begin with a column variable\r\n| where ErrorType == \"{AuthResultA}\"\r\n     or ErrorFlag == \"{AuthResultA}\"\r\n// Keyword \"step\" refers to the aggregation bin width, or the period length that each data point in the ...\r\n// ... series will represent. For example, if we make a series ~ \"from 10am to 10pm step 1h\", the data ...\r\n// ... gets split into 12 hour-long segments (10-11, 11-12, 12-1, etc), so our series has 12 data points ...\r\n// ... where each one is the number of events that occurred in that hour-long stretch of time. You can ...\r\n// ... make this \"step\" variable any length of time. We recommend using the default {TimeRange:grain} ...\r\n// ... which changes based on how long the time range is, or just 1h for anything less than 30 days\r\n| make-series Attempts = count() on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1h\r\n| render timechart",
        "size": 0,
        "title": "Sign-in distribution*",
        "noDataMessage": "No sign-in attempts found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "timeBrushParameterName": "TimeRangeA",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart"
      },
      "conditionalVisibility": {
        "parameterName": "TileView",
        "comparison": "isEqualTo",
        "value": "A"
      },
      "name": "query - 1A"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// THIS QUERY HAS TWO VERSIONS - THEY ARE IDENTICAL EXCEPT THEY USE DIFFERENT PARAMETERS FOR AUTH RESULT. THIS IS ...\r\n// ... SO THAT BOTH VERSIONS OF THE TILE OBJECT CAN CONTROL THE TIME CHART AND GRID\r\n// Q1B: Generate time-chart for sign-in attempts to a given user account with a selected auth result type - IF SHOWING COUNTS\r\n// Define lookup table for auth attempt result types\r\nlet ErrorCodes = datatable(ErrorCode:string, ErrorType:string)\r\n        [ \"0xC0000064\", \"Bad Username\"\r\n        , \"0xC000006A\", \"Bad Password\"\r\n        , \"0xC000006D\", \"Generic Logon Failure\"\r\n        , \"0xC000006F\", \"Outside Authorized Hours\"\r\n        , \"0xC0000070\", \"Unauthorized Workstation\"\r\n        , \"0xC0000071\", \"Expired Password\"\r\n        , \"0xC0000072\", \"Account Disabled\"\r\n        , \"0xC0000193\", \"Account Expired\"\r\n        , \"0xC0000224\", \"Successful\"\r\n        , \"0xC0000234\", \"Account Locked Out\"\r\n        , \"0xC0000371\", \"The local account store does not contain secret material for the specified account.\"\r\n        , \"0x0\", \"Successful\"\r\n        ];\r\n// Filter down to the selected username and auth result type\r\nAADDomainServicesAccountLogon\r\n| where TimeGenerated {TimeRange:value}\r\n| project TimeGenerated\r\n        , Event_ID = extract(\".+/(.+[0-9])\",1,tostring(OperationName))\r\n        , AccountName = tolower(extract(\"Logon Account:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription)))\r\n        , ErrorCode = extract(\"Error Code:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription))\r\n| where Event_ID == \"4776\"\r\n    and AccountName =~ '{name:value}'\r\n| lookup kind=leftouter ErrorCodes on ErrorCode\r\n| extend ErrorFlag = \"All\" // Defined because boolean checks must begin with a column variable\r\n| where ErrorType == \"{AuthResultB}\"\r\n     or ErrorFlag == \"{AuthResultB}\"\r\n// Keyword \"step\" refers to the aggregation bin width, or the period length that each data point in the ...\r\n// ... series will represent. For example, if we make a series ~ \"from 10am to 10pm step 1h\", the data ...\r\n// ... gets split into 12 hour-long segments (10-11, 11-12, 12-1, etc), so our series has 12 data points ...\r\n// ... where each one is the number of events that occurred in that hour-long stretch of time. You can ...\r\n// ... make this \"step\" variable any length of time. We recommend using the default {TimeRange:grain} ...\r\n// ... which changes based on how long the time range is, or just 1h for anything less than 30 days\r\n| make-series Attempts = count() on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1h\r\n| render timechart",
        "size": 0,
        "title": "Sign-in distribution*",
        "noDataMessage": "No sign-in attempts found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "timeBrushParameterName": "TimeRangeB",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "timechart"
      },
      "conditionalVisibility": {
        "parameterName": "TileView",
        "comparison": "isEqualTo",
        "value": "B"
      },
      "name": "query - 1B"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// THIS QUERY HAS TWO VERSIONS - THEY ARE IDENTICAL EXCEPT THEY USE DIFFERENT PARAMETERS FOR AUTH RESULT. THIS IS ...\r\n// ... SO THAT BOTH VERSIONS OF THE TILE OBJECT AND TIME CHART CAN CONTROL THE GRID\r\n// Q2A: Generate grid of logged sign-in attempts to a given user account with a selected auth result type - IF SHOWING PERCENTAGES\r\n// Define lookup table for auth attempt result types\r\nlet ErrorCodes = datatable(ErrorCode:string, ErrorType:string)\r\n        [ \"0xC0000064\", \"Bad Username\"\r\n        , \"0xC000006A\", \"Bad Password\"\r\n        , \"0xC000006D\", \"Generic Logon Failure\"\r\n        , \"0xC000006F\", \"Outside Authorized Hours\"\r\n        , \"0xC0000070\", \"Unauthorized Workstation\"\r\n        , \"0xC0000071\", \"Expired Password\"\r\n        , \"0xC0000072\", \"Account Disabled\"\r\n        , \"0xC0000193\", \"Account Expired\"\r\n        , \"0xC0000224\", \"Successful\"\r\n        , \"0xC0000234\", \"Account Locked Out\"\r\n        , \"0xC0000371\", \"The local account store does not contain secret material for the specified account.\"\r\n        , \"0x0\", \"Successful\"\r\n        ];\r\n// Filter down to the selected username and auth result type [and sub-selected time range]\r\nAADDomainServicesAccountLogon\r\n| where TimeGenerated {TimeRangeA:value}\r\n| extend Event_ID = extract(\".+/(.+[0-9])\",1,tostring(OperationName))\r\n       , AccountName = tolower(extract(\"Logon Account:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription)))\r\n       , ErrorCode = extract(\"Error Code:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription))\r\n| where Event_ID == \"4776\"\r\n    and AccountName =~ '{name:value}'\r\n| lookup kind=leftouter ErrorCodes on ErrorCode\r\n| extend ErrorFlag = \"All\" // Defined because boolean checks must begin with a column variable\r\n| where ErrorType == \"{AuthResultA}\"\r\n     or ErrorFlag == \"{AuthResultA}\"\r\n| extend Source_Workstation = extract(\"Source Workstation:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription))\r\n| sort by TimeGenerated\r\n| project TimeGenerated\r\n        , Event_ID\r\n        , Action = \"Sign-in attempt\"\r\n        , ErrorType\r\n        , AccountName\r\n        , Workstation =  iff(Source_Workstation != \"\", Source_Workstation, \"<empty>\")\r\n        , DC_ID = extract(\"([0-9A-Za-z]+)\",1,tostring(RecordId))",
        "size": 1,
        "title": "Sign-in event logs*",
        "noDataMessage": "No sign-in attempts found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "TimeGenerated",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Event_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Action",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ErrorType",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "AccountName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Workstation",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "DC_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 10000,
          "labelSettings": [
            {
              "columnId": "TimeGenerated",
              "label": "Time"
            },
            {
              "columnId": "Event_ID",
              "label": "Event",
              "comment": "Event ID in Windows Server 2016 protocol"
            },
            {
              "columnId": "AccountName",
              "label": "Username"
            },
            {
              "columnId": "ErrorType",
              "label": "Result"
            },
            {
              "columnId": "Workstation",
              "comment": "Shows as <empty> if not recorded"
            },
            {
              "columnId": "DC_ID",
              "label": "Domain Controller",
              "comment": "Which Domain Controller the event was logged on"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "TileView",
        "comparison": "isEqualTo",
        "value": "A"
      },
      "name": "query - 2A",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// THIS QUERY HAS TWO VERSIONS - THEY ARE IDENTICAL EXCEPT THEY USE DIFFERENT PARAMETERS FOR AUTH RESULT. THIS IS ...\r\n// ... SO THAT BOTH VERSIONS OF THE TILE OBJECT AND TIME CHART CAN CONTROL THE GRID\r\n// Q2B: Generate grid of logged sign-in attempts to a given user account with a selected auth result type - IF SHOWING PERCENTAGES\r\n// Define lookup table for auth attempt result types\r\nlet ErrorCodes = datatable(ErrorCode:string, ErrorType:string)\r\n        [ \"0xC0000064\", \"Bad Username\"\r\n        , \"0xC000006A\", \"Bad Password\"\r\n        , \"0xC000006D\", \"Generic Logon Failure\"\r\n        , \"0xC000006F\", \"Outside Authorized Hours\"\r\n        , \"0xC0000070\", \"Unauthorized Workstation\"\r\n        , \"0xC0000071\", \"Expired Password\"\r\n        , \"0xC0000072\", \"Account Disabled\"\r\n        , \"0xC0000193\", \"Account Expired\"\r\n        , \"0xC0000224\", \"Successful\"\r\n        , \"0xC0000234\", \"Account Locked Out\"\r\n        , \"0xC0000371\", \"The local account store does not contain secret material for the specified account.\"\r\n        , \"0x0\", \"Successful\"\r\n        ];\r\n// Filter down to the selected username and auth result type [and sub-selected time range]\r\nAADDomainServicesAccountLogon\r\n| where TimeGenerated {TimeRangeB:value}\r\n| extend Event_ID = extract(\".+/(.+[0-9])\",1,tostring(OperationName))\r\n       , AccountName = tolower(extract(\"Logon Account:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription)))\r\n       , ErrorCode = extract(\"Error Code:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription))\r\n| where Event_ID == \"4776\"\r\n    and AccountName =~ '{name:value}'\r\n| lookup kind=leftouter ErrorCodes on ErrorCode\r\n| extend ErrorFlag = \"All\" // Defined because boolean checks must begin with a column variable\r\n| where ErrorType == \"{AuthResultB}\"\r\n     or ErrorFlag == \"{AuthResultB}\"\r\n| extend Source_Workstation = extract(\"Source Workstation:\\t(.+[0-9A-Za-z])\",1,tostring(ResultDescription))\r\n| sort by TimeGenerated\r\n| project TimeGenerated\r\n        , Event_ID\r\n        , Action = \"Sign-in attempt\"\r\n        , ErrorType\r\n        , AccountName\r\n        , Workstation =  iff(Source_Workstation != \"\", Source_Workstation, \"<empty>\")\r\n        , DC_ID = extract(\"([0-9A-Za-z]+)\",1,tostring(RecordId))",
        "size": 1,
        "title": "Sign-in event logs*",
        "noDataMessage": "No sign-in attempts found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "TimeGenerated",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Event_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Action",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ErrorType",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "AccountName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Workstation",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "DC_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 10000,
          "labelSettings": [
            {
              "columnId": "TimeGenerated",
              "label": "Time"
            },
            {
              "columnId": "Event_ID",
              "label": "Event",
              "comment": "Event ID in Windows Server 2016 protocol"
            },
            {
              "columnId": "AccountName",
              "label": "Username"
            },
            {
              "columnId": "ErrorType",
              "label": "Result"
            },
            {
              "columnId": "Workstation",
              "comment": "Shows as <empty> if not recorded"
            },
            {
              "columnId": "DC_ID",
              "label": "Domain Controller",
              "comment": "Which Domain Controller the event was logged on"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "TileView",
        "comparison": "isEqualTo",
        "value": "B"
      },
      "name": "query - 2B",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "_\\* Showing **{AuthResultA}** sign-in attempts for **{name}**_"
      },
      "conditionalVisibility": {
        "parameterName": "TileView",
        "comparison": "isEqualTo",
        "value": "A"
      },
      "name": "text - 3A"
    },
    {
      "type": 1,
      "content": {
        "json": "_\\* Showing **{AuthResultB}** sign-in attempts for **{name}**_"
      },
      "conditionalVisibility": {
        "parameterName": "TIleView",
        "comparison": "isEqualTo",
        "value": "B"
      },
      "name": "text - 3B"
    },
    {
      "type": 1,
      "content": {
        "json": "___"
      },
      "name": "text - 4"
    },
    {
      "type": 1,
      "content": {
        "json": "## Account Management ##"
      },
      "name": "text - 5"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Q3: Generate a grid of state-changes to a given user account\r\nAADDomainServicesAccountManagement\r\n| where TimeGenerated {TimeRange:value}\r\n| extend Event_ID = extract(\".+/(.+[0-9])\",1,tostring(OperationName))\r\n| where Event_ID == \"4720\"\r\n     or Event_ID == \"4722\"\r\n     or Event_ID == \"4725\"\r\n     or Event_ID == \"4726\"\r\n| parse ResultDescription with * \"Target Account:\" target\r\n| extend TargetUserName = extract(\"Account Name:\\t\\t(.+[ -~])\",1,tostring(target))\r\n       , TargetDomainName = extract(\"Account Domain:\\t\\t(.+[ -~])\",1,tostring(target))\r\n| where TargetUserName =~ '{name:value}'\r\n| sort by TimeGenerated\r\n| project TimeGenerated\r\n        , Event_ID\r\n        , Action = case(Event_ID == \"4720\", \"Account Created\"\r\n                      , Event_ID == \"4722\", \"Account Enabled\"\r\n                      , Event_ID == \"4725\", \"Account Disabled\"\r\n                      , \"Account Deleted\")\r\n        , Subject = strcat(SubjectUserName, \" [\", SubjectDomainName, \"/\", SubjectUserSid, \"]\")\r\n        , SubjectLogonId\r\n        , Target = strcat(TargetUserName, \" [\", TargetDomainName, \"/\", TargetSid, \"]\")\r\n        , DC_ID = extract(\"([0-9A-Za-z]+)\",1,tostring(RecordId))",
        "size": 1,
        "title": "Account state changes",
        "noDataMessage": "No changes found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "TimeGenerated",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Event_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Action",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectUserSid",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectUserName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectDomainName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectLogonId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "TargetSid",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "TargetUserName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "TargetDomainName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "DC_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "TimeGenerated",
              "label": "Time"
            },
            {
              "columnId": "Event_ID",
              "label": "Event",
              "comment": "Event ID in Windows Server 2016 protocol"
            },
            {
              "columnId": "Action"
            },
            {
              "columnId": "SubjectUserSid"
            },
            {
              "columnId": "SubjectUserName"
            },
            {
              "columnId": "SubjectDomainName"
            },
            {
              "columnId": "SubjectLogonId"
            },
            {
              "columnId": "TargetSid"
            },
            {
              "columnId": "TargetUserName"
            },
            {
              "columnId": "TargetDomainName"
            },
            {
              "columnId": "DC_ID",
              "label": "Domain Controller",
              "comment": "Which Domain Controller the event was logged on"
            }
          ]
        }
      },
      "name": "query - 3",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Q4: Generate a grid of password changes and resets for a given user account\r\nAADDomainServicesAccountManagement\r\n| where TimeGenerated {TimeRange:value}\r\n| extend Event_ID = extract(\".+/([0-9]+)\",1,tostring(OperationName))\r\n| where Event_ID == \"4723\"\r\n     or Event_ID == \"4724\"\r\n| parse ResultDescription with * \"Target Account:\" target\r\n| extend TargetUserName = extract(\"Account Name:\\t*([[:print:]]*)\",1,tostring(target))\r\n       , TargetDomainName = extract(\"Account Domain:\\t*([[:print:]]*)\",1,tostring(target))\r\n| where TargetUserName =~ '{name:value}'\r\n| sort by TimeGenerated\r\n| project TimeGenerated\r\n        , Event_ID\r\n        , Action = iif(Event_ID == \"4723\", \"Password Changed\", \"Password Reset\")\r\n        , Subject = strcat(SubjectUserName, \" [\", SubjectDomainName, \"/\", SubjectUserSid, \"]\")\r\n        , SubjectLogonId\r\n        , Target = strcat(TargetUserName, \" [\", TargetDomainName, \"/\", TargetSid, \"]\")\r\n        , DC_ID = extract(\"([0-9A-Za-z]+)\",1,tostring(RecordId))",
        "size": 1,
        "title": "Password management",
        "noDataMessage": "No changes found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "TimeGenerated",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Event_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Action",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectUserSid",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectUserName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectDomainName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectLogonId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "TargetSid",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "TargetUserName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "DC_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "TimeGenerated",
              "label": "Time"
            },
            {
              "columnId": "Event_ID",
              "label": "Event",
              "comment": "Event ID in Windows Server 2016 protocol"
            },
            {
              "columnId": "Action"
            },
            {
              "columnId": "SubjectUserSid"
            },
            {
              "columnId": "SubjectUserName"
            },
            {
              "columnId": "SubjectDomainName"
            },
            {
              "columnId": "SubjectLogonId"
            },
            {
              "columnId": "TargetSid"
            },
            {
              "columnId": "TargetUserName"
            },
            {
              "columnId": "DC_ID",
              "label": "Domain Controller",
              "comment": "Which Domain Controller the event was logged on"
            }
          ]
        }
      },
      "name": "query - 4",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "// Q5: Generate a grid of group membership changes for a given user account\r\nAADDomainServicesAccountManagement\r\n| where TimeGenerated {TimeRange:value}\r\n| extend Event_ID = extract(\".+/(.+[0-9])\",1,tostring(OperationName))\r\n| where Event_ID == \"4728\" or Event_ID == \"4729\"\r\n     or Event_ID == \"4732\" or Event_ID == \"4733\"\r\n     or Event_ID == \"4756\" or Event_ID == \"4757\"\r\n| where MemberName has '{name:value}'\r\n| parse ResultDescription with * \"Group:\" groupInfo\r\n| sort by TimeGenerated\r\n| project TimeGenerated\r\n        , Event_ID\r\n        , Action = iif(Event_ID in (\"4728\", \"4732\", \"4756\"), \"Added to a group\", \"Removed from a group\")\r\n        , Subject = strcat(SubjectUserName, \" [\", SubjectDomainName, \"/\", SubjectUserSid, \"]\")\r\n        , SubjectLogonId\r\n        , Group = strcat(extract(\"Group Name:\\t*([ -~]*)\",1,tostring(groupInfo)), \" [\", TargetSid, \"]\")\r\n        , Target = MemberName\r\n        , DC_ID = extract(\"([0-9A-Za-z]+)\",1,tostring(RecordId))",
        "size": 1,
        "title": "Group membership",
        "noDataMessage": "No changes found",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "TimeGenerated",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Event_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Action",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectUserSid",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectUserName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectDomainName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "SubjectLogonId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "TargetSid",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "TargetUserName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "GroupSid",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "GroupName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "DC_ID",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "TimeGenerated",
              "label": "Time"
            },
            {
              "columnId": "Event_ID",
              "label": "Event",
              "comment": "Event ID in Windows Server 2016 protocol"
            },
            {
              "columnId": "Action"
            },
            {
              "columnId": "SubjectUserSid"
            },
            {
              "columnId": "SubjectUserName"
            },
            {
              "columnId": "SubjectDomainName"
            },
            {
              "columnId": "SubjectLogonId"
            },
            {
              "columnId": "TargetSid"
            },
            {
              "columnId": "TargetUserName"
            },
            {
              "columnId": "GroupSid"
            },
            {
              "columnId": "GroupName"
            },
            {
              "columnId": "DC_ID",
              "label": "Domain Controller",
              "comment": "Which Domain Controller the event was logged on"
            }
          ]
        }
      },
      "name": "query - 5",
      "styleSettings": {
        "showBorder": true
      }
    }
  ],
  "styleSettings": {},
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}