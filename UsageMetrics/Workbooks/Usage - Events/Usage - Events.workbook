{
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json",
  "version": "Notebook/1.0",
  "isLocked": true,
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "503cdbaf-aef3-4a02-93fd-45140e5d8ec8",
            "version": "KqlParameterItem/1.0",
            "name": "componentId",
            "type": 1,
            "description": "componentId for tiles link",
            "isHiddenWhenLocked": true,
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "37b05d6c-ab7c-4190-94d8-4973fcf06c49",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "During",
            "type": 4,
            "description": "Choose the time range for this report.",
            "isRequired": true,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            },
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "ff00e059-7ba9-4dfa-a926-8288cf30fc05",
            "version": "KqlParameterItem/1.0",
            "name": "UsersList",
            "label": "Show occurrences for",
            "type": 2,
            "description": "A cohort filter can be set at edit mode that is a collection of users, sessions, or operations that are matched by a set of filters specified in the definition of the cohort. When a cohort is used in this report, the result will be the intersection of users, sessions, or operations matched by the cohort and users, sessions, or operations matched by the rest of the query in this report.",
            "isRequired": true,
            "query": "datatable(value: string, label: string, group:string, selected:string) ['user_Id', 'All Users', '', 'true']",
            "value": "user_Id",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "f3983330-899b-4e6e-995e-d4c7feefd699",
            "version": "KqlParameterItem/1.0",
            "name": "requestsCount",
            "type": 1,
            "query": "union requests\r\n| where timestamp {TimeRange}\r\n| count\r\n",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "5f3f81d8-c4fb-40f1-8496-199a2da27852",
            "version": "KqlParameterItem/1.0",
            "name": "pageViewsCount",
            "type": 1,
            "query": "union pageViews\r\n    | where timestamp {TimeRange}\r\n    | count\r\n",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "0afb0089-98e9-479c-b12e-a982870ce6be",
            "version": "KqlParameterItem/1.0",
            "name": "Whoused",
            "label": "Who used",
            "type": 2,
            "description": "Choose which custom events, requests and page views the users should have sent for this report.",
            "isRequired": true,
            "query": "let defaultValue = iff('{pageViewsCount}' == '', 'customEvents','pageViews,customEvents');\r\ndatatable(value: string, label: string) ['pageViews,customEvents,requests', 'Any Custom Events, Request or Page View', 'pageViews,customEvents', 'Any Custom Events or Page View', 'requests,customEvents', 'Any Custom Events or Request','requests,pageViews','Any Request or Page View','customEvents','Any Custom Event','pageViews', 'Any Page View', 'requests', 'Any Request']\r\n| where '{requestsCount}' != '' or value !contains 'requests'\r\n| where '{pageViewsCount}' != '' or value !contains 'pageViews'\r\n| extend selected = iif(value == defaultValue, 'true', '')",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "fd41f402-40ca-4dc5-bd29-38ec93f9d521",
            "version": "KqlParameterItem/1.0",
            "name": "UserEvent",
            "label": "Events",
            "type": 2,
            "description": " Choose multiple events, requests and page views, the report will show users who did at least one of the events, requests or page views, not necessarily all of the selected events, requests and page views.",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union {Whoused}\r\n    | where timestamp {TimeRange}\r\n    | project name, group = case(itemType == 'pageView', 'Page Views', itemType == 'customEvent', 'Custom Events', 'Requests')\r\n    | summarize count() by group, name\r\n    | project value=name, label=name, group, selected=''\r\n    //| union showCohort\r\n  | extend value = replace(@\"\\\\'\", @\"'\\1\",value)\r\n  | order by group asc, label asc",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "e4152b00-9f31-4ac2-b1c9-2f0964513368",
            "version": "KqlParameterItem/1.0",
            "name": "usageStandardDimension",
            "type": 1,
            "description": "Query Standard dimension ",
            "isRequired": true,
            "query": "let dimensionList = datatable(ColumnName:string, label:string)[\r\n\t'application_Version', 'Application version',\r\n\t'user_AuthenticatedId', 'Authenticated or anonymous traffic',\r\n\t'client_Browser', 'Browser version', \r\n\t'client_City', 'City',\r\n    'client_CountryOrRegion', 'Country or region', \r\n\t'cloud_RoleInstance', 'Cloud role instance', \r\n\t'cloud_RoleName', 'Cloud role name',\r\n\t'client_Model', 'Device model', \r\n    'client_OS', 'Operating system',\r\n\t'client_Type', 'Device type',\r\n\t'isSynthetic', 'Is real user traffic',\r\n    'name', 'Name', \r\n\t'operation_Name', 'Operation name',\r\n\t'performanceBucket', 'Performance',\r\n    'resultCode', 'Result code',\r\n    'responseCode', 'Response code',\r\n\t'tostring(parseurl(url)[\"Host\"])', 'URL host', \r\n\t'tostring(parseurl(url)[\"Path\"])', 'URL path',\r\n\t'operation_SyntheticSource', 'Source of synthetic traffic',\r\n\t'client_CountryOrRegion', 'State or province', \r\n\t'success', 'Successful request',\r\n    'type','Telemetry type'\r\n\t] | order by label asc;\r\nunion {Whoused}\r\n    | where timestamp {TimeRange}\r\n    | getschema \r\n    | where ColumnType == \"string\"\r\n    | summarize count() by ColumnName\r\n    | join kind = inner dimensionList on ColumnName\r\n    | project ColumnName, label\r\n    | order by label asc\r\n    | project data = strcat(\"'\", ColumnName,\"','\",label,\"','Standard Properties'\")",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "b6db195f-a819-45ff-8eed-bae7c09ab135",
            "version": "KqlParameterItem/1.0",
            "name": "getCustomDimensions",
            "type": 1,
            "description": "The query is resued by ByValue, SplityBy and Properties dropdown",
            "isRequired": true,
            "query": "union {Whoused}\r\n            | where timestamp {TimeRange}\r\n            | project  column_ifexists(\"customDimensions\",'')\r\n            | evaluate bag_unpack(column_ifexists(\"customDimensions\",''))\r\n            | getschema \r\n            |  where ColumnType == 'string'\r\n            | summarize count() by ColumnName \r\n            | project value =strcat(\"customDimensions[\\\"\", ColumnName, \"\\\"]\"), label =ColumnName, group='Custom Properties'\r\n            | order by label asc\r\n            | project data = strcat(\"'\", value,\"','\",label,\"','\",group,\"'\")",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "8b11feda-c3d4-4fb6-93d4-92321ccabd9d",
            "version": "KqlParameterItem/1.0",
            "name": "formattedCustomDimensions",
            "type": 1,
            "isRequired": true,
            "value": "[]",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (getCustomDimensions is empty ), result = '[]'",
                "criteriaContext": {
                  "leftOperand": "getCustomDimensions",
                  "operator": "is Empty",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "[]"
                }
              },
              {
                "condition": "if (getCustomDimensions starts with '['), result = getCustomDimensions",
                "criteriaContext": {
                  "leftOperand": "getCustomDimensions",
                  "operator": "startsWith",
                  "rightValType": "static",
                  "rightVal": "[",
                  "resultValType": "param",
                  "resultVal": "getCustomDimensions"
                }
              },
              {
                "condition": "else result = '[{getCustomDimensions}]'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "[{getCustomDimensions}]"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "8cd9003c-8e76-4d21-8b22-b7a11197f42f",
            "version": "KqlParameterItem/1.0",
            "name": "ByValue",
            "label": "By value x-axis",
            "type": 2,
            "description": "Choose a time grain or property to create x-axis for users.",
            "isRequired": true,
            "query": "let grainList = datatable(value:string, label:string, seconds:string, group: string, selected: string)[\r\n'3m', '3 minutes', '3600', 'Time Range', 'true',\r\n\t'1h', '1 hour', '86400', 'Time Range', 'true',\r\n\t'2h', '2 hours', '172800', 'Time Range', 'true',\r\n\t'3h', '3 hours', '259200', 'Time Range', 'true',\r\n\t'1d', '1 day', '604800', 'Time Range', 'true',\r\n\t'12h', '12 hours', '604800', 'Time Range', '',\r\n\t'1d', '1 day', '1209600', 'Time Range', 'true',\r\n\t'1d', '1 day', '2592000', 'Time Range', 'true',\r\n\t'7d', '7 days', '2592000', 'Time Range', '',\r\n\t'1d', '1 day', '5184000', 'Time Range', 'true',\r\n\t'7d', '7 days', '5184000', 'Time Range', '',\r\n\t'1d', '1 day', '7776000', 'Time Range', 'true',\r\n\t'7d', '7 days', '7776000', 'Time Range', ''\r\n\t];\r\n let timeTable = grainList\r\n | where seconds == '{TimeRange:seconds}'\r\n | project value, label, group, selected;\r\nlet customDimension = datatable(value:string, label:string, group: string){formattedCustomDimensions};let dimensionList = datatable(value:string, label:string, group: string) {usageStandardDimension};\r\ntimeTable\r\n | union //showCohort,\r\n dimensionList, customDimension\r\n | project value, label, group, selected",
            "value": "1h",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "cf1d4683-4853-4302-9c6e-4ea1925dfc5f",
            "version": "KqlParameterItem/1.0",
            "name": "isByCohort",
            "type": 1,
            "description": "Is x-axis created by cohort or not?",
            "query": "let query = '{ByValue}';\r\n print parse_json(query).isCohort",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "033f9e3f-5198-4709-94d7-254b824c9669",
            "version": "KqlParameterItem/1.0",
            "name": "isTimeRange",
            "type": 1,
            "description": "Is x-axis created by time bins or not?",
            "isRequired": true,
            "value": "true",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (isByCohort == 'true'), result = 'false'",
                "criteriaContext": {
                  "leftOperand": "isByCohort",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "false"
                }
              },
              {
                "condition": "if (ByValue regex '[1,2,3,7,12][m|h|d]'), result = 'true'",
                "criteriaContext": {
                  "leftOperand": "ByValue",
                  "operator": "regex",
                  "rightValType": "static",
                  "rightVal": "[1,2,3,7,12][m|h|d]",
                  "resultValType": "static",
                  "resultVal": "true"
                }
              },
              {
                "condition": "else result = 'false'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "false"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "47faf500-a03f-4600-bb6d-973d248fe874",
            "version": "KqlParameterItem/1.0",
            "name": "UsageSplitBy",
            "label": "Split by",
            "type": 2,
            "description": "Choose a property lets you segment by users.",
            "isRequired": true,
            "query": "let customDimension = datatable(value:string, label:string, group: string){formattedCustomDimensions}; \r\nlet PropertyList = union (datatable(value:string, label:string, group: string){usageStandardDimension}), customDimension\r\n    | extend  timerange= '{TimeRange}'\r\n    | where '{isTimeRange}' == 'true'\r\n    | project value, label, group, selected ='';\r\ndatatable(value:string, label:string, group: string, selected: string)[\r\n\t'<unset>', 'unset', '', 'true'] \r\n    | union //showCohort,\r\n    PropertyList",
            "value": "<unset>",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "d9f3a9e9-dbc8-43bd-8f91-46cafa82250e",
            "version": "KqlParameterItem/1.0",
            "name": "IsSplitCohort",
            "type": 1,
            "description": "Check if SplitBy selection is a cohrt",
            "query": "let query = '{UsageSplitBy}';\r\n print parse_json(query).isCohort",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "6aa9fe7f-8c73-4871-8b9f-c15014832721",
            "version": "KqlParameterItem/1.0",
            "name": "barChartMode",
            "type": 1,
            "description": "Get bar Chart mode",
            "isRequired": true,
            "query": "print iff('{UsageSplitBy}' == '<unset>' and '{isTimeRange}' == 'true', 'TimeBar', iff('{UsageSplitBy}' == '<unset>' and '{isTimeRange}' == 'false', 'ByValueBar', 'SplitBar'))",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - mainSelections"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "5632ed58-6194-40d9-a714-73c23cdba54d",
            "version": "KqlParameterItem/1.0",
            "name": "customFilters",
            "label": "Filters",
            "type": 1,
            "description": "Add filters. Example: | where client_City == \"Seattle\" | where client_OS contains \"Windows\" ",
            "typeSettings": {
              "multiLineText": true,
              "editorLanguage": "kql"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "e33eefc9-12e4-46ba-8a2b-5df923480f9d",
            "version": "KqlParameterItem/1.0",
            "name": "filters",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "else result = customFilters",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "customFilters"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - 8"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "bc878678-8cbc-4c1c-b6be-0c2fd8604fb8",
            "version": "KqlParameterItem/1.0",
            "name": "cohortUsersQuery",
            "type": 1,
            "description": "Extract query in cohort json from UsersList dropdown ",
            "query": "let query = '{UsersList}';\r\n print parse_json(query).cohort",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "705011ae-3a87-4f26-885d-d4d9545b29f4",
            "version": "KqlParameterItem/1.0",
            "name": "isBelongCohort",
            "type": 1,
            "description": "Extract IsBelong property in cohort json from UsersList dropdown ",
            "query": "let query = '{UsersList}';\r\n print parse_json(query).isBelong",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "706e8b54-1ac7-4243-ab36-f9d67343e025",
            "version": "KqlParameterItem/1.0",
            "name": "mainTableQuery",
            "type": 1,
            "description": "mainTable Query",
            "isRequired": true,
            "value": "mainTable",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (isBelongCohort == 'true'), result = '(){{cohortUsersQuery} | extend hashedUserId = hash(user_Id) | distinct hashedUserId | join kind=inner (mainTable | extend hashedUserId = hash(user_Id)) on hashedUserId}'",
                "criteriaContext": {
                  "leftOperand": "isBelongCohort",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "(){{cohortUsersQuery} | extend hashedUserId = hash(user_Id) | distinct hashedUserId | join kind=inner (mainTable | extend hashedUserId = hash(user_Id)) on hashedUserId}"
                }
              },
              {
                "condition": "if (isBelongCohort == 'false'), result = '(){{cohortUsersQuery} | extend hashedUserId = hash(user_Id) | distinct hashedUserId | join kind=rightanti (mainTable | extend hashedUserId = hash(user_Id)) on hashedUserId}'",
                "criteriaContext": {
                  "leftOperand": "isBelongCohort",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "false",
                  "resultValType": "static",
                  "resultVal": "(){{cohortUsersQuery} | extend hashedUserId = hash(user_Id) | distinct hashedUserId | join kind=rightanti (mainTable | extend hashedUserId = hash(user_Id)) on hashedUserId}"
                }
              },
              {
                "condition": "else result = 'mainTable'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "mainTable"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "77ab1a31-79d2-4431-b131-59b8631d1fdd",
            "version": "KqlParameterItem/1.0",
            "name": "byCohortQuery",
            "type": 1,
            "description": "Extract query in cohort json from ByValue dropdown",
            "query": "let query = '{ByValue}';\r\n print parse_json(query).cohort",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "9aa04628-19d5-43b7-9190-e10d3d067c08",
            "version": "KqlParameterItem/1.0",
            "name": "byTableQuery",
            "type": 1,
            "description": "By query segement ",
            "value": "() {byTable | extend dimension = 1h | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)}",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (isByCohort == 'true'), result = '() {{byCohortQuery} | extend hashedUserId = hash(user_Id) | distinct hashedUserId  | extend byColumn = \"Cohort Users\" | join kind=rightouter (byTable | extend hashedUserId = hash(user_Id)) on hashedUserId | extend dimension = byColumn   | extend dimension = iif(isempty(dimension), \"Others\", \"Cohort\")}'",
                "criteriaContext": {
                  "leftOperand": "isByCohort",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "() {{byCohortQuery} | extend hashedUserId = hash(user_Id) | distinct hashedUserId  | extend byColumn = \"Cohort Users\" | join kind=rightouter (byTable | extend hashedUserId = hash(user_Id)) on hashedUserId | extend dimension = byColumn   | extend dimension = iif(isempty(dimension), \"Others\", \"Cohort\")}"
                }
              },
              {
                "condition": "else result = '() {byTable | extend dimension = {ByValue} | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)}'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "() {byTable | extend dimension = {ByValue} | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)}"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "463cf64c-ceec-4831-b4a1-d72953670eee",
            "version": "KqlParameterItem/1.0",
            "name": "splitbyLabel",
            "type": 1,
            "value": "unset",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "else result = '{UsageSplitBy:label}'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "{UsageSplitBy:label}"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "9645e737-0b9c-437f-94d7-cf27c2151639",
            "version": "KqlParameterItem/1.0",
            "name": "splitCohortQuery",
            "type": 1,
            "description": "Extract query in cohort json from SplitBy dropdown",
            "query": "let query = '{UsageSplitBy}';\r\n print parse_json(query).cohort",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "d4a9bee5-e949-4c51-82f6-f074b03c5dae",
            "version": "KqlParameterItem/1.0",
            "name": "splitTableQuery",
            "type": 1,
            "description": "Split query segement",
            "value": "() {queryTable | extend dimension = <unset> | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)}",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (IsSplitCohort == 'true'), result = '() {{splitCohortQuery} | extend hashedUserId = hash(user_Id) | distinct hashedUserId  | extend splitColumn = \"Cohort Users\" | join kind=rightouter (queryTable | extend hashedUserId = hash(user_Id)) on hashedUserId | extend dimension = splitColumn | extend dimension = iif(isempty(dimension), \"Others\", \"{splitbyLabel:escape} \")}'",
                "criteriaContext": {
                  "leftOperand": "IsSplitCohort",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "true",
                  "resultValType": "static",
                  "resultVal": "() {{splitCohortQuery} | extend hashedUserId = hash(user_Id) | distinct hashedUserId  | extend splitColumn = \"Cohort Users\" | join kind=rightouter (queryTable | extend hashedUserId = hash(user_Id)) on hashedUserId | extend dimension = splitColumn | extend dimension = iif(isempty(dimension), \"Others\", \"{splitbyLabel:escape} \")}"
                }
              },
              {
                "condition": "else result = '() {queryTable | extend dimension = {UsageSplitBy} | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)}'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "() {queryTable | extend dimension = {UsageSplitBy} | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)}"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "f949bcae-483d-4356-a3c4-3e43652ffbf8",
            "version": "KqlParameterItem/1.0",
            "name": "cohortEventsQuery",
            "type": 1,
            "description": "Extract cohort queries from UserEvent dropdown",
            "query": "let table = print {UserEvent}\r\n| evaluate narrow()\r\n| where Value startswith\"{\\\"cohort\\\":\"\r\n| project name = \"cohorts\", Cohorts = strcat(\"(\",parse_json(Value).cohort, \"  | summarize makeset(name)\");\r\ntable\r\n| summarize cohorts = make_list(Cohorts) by tostring(name)\r\n| project cohorts= replace(@'\\[', @'union \\1', tostring(cohorts))\r\n| project cohorts= replace(@'name\\)\"', @'name)) \\1', cohorts)\r\n| project cohorts= replace(@'\"', @'\\1', cohorts)\r\n| project cohorts= replace(@'\\]', @'\\1', cohorts)\r\n",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "f04476f6-28f6-4d71-b39f-950a6c37c747",
            "version": "KqlParameterItem/1.0",
            "name": "userEventsQuery",
            "type": 1,
            "description": "Extract event queries from UserEvent dropdown",
            "query": "print {UserEvent}\r\n| evaluate narrow()\r\n| where Value !startswith\"{\\\"cohort\\\":\"\r\n| summarize events = make_list(Value) by tostring(Row)\r\n| project events= replace(@'\\[', @'\\1', tostring(events))\r\n| project events= replace(@'\\]', @'\\1', events) | project events= replace(@\"'\", @\"\\\\'\\1\", events)",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "8738ce5d-ad4e-46f0-8b54-98dd29b3bd7c",
            "version": "KqlParameterItem/1.0",
            "name": "getCohortEventsQuery",
            "type": 1,
            "description": "Merge cohort queries ",
            "value": "",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (UserEvent == ''*''), result = 'print '''",
                "criteriaContext": {
                  "leftOperand": "UserEvent",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "'*'",
                  "resultValType": "static",
                  "resultVal": "print ''"
                }
              },
              {
                "condition": "if (cohortEventsQuery is empty ), result = '{cohortEventsQuery}'",
                "criteriaContext": {
                  "leftOperand": "cohortEventsQuery",
                  "operator": "is Empty",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "{cohortEventsQuery}"
                }
              },
              {
                "condition": "else result = ' {cohortEventsQuery} | project cohortEvents= replace(@'\\[', @'\\1', tostring(set_name)) | project cohortEvents= replace(@'\\]', @'\\1', cohortEvents)'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": " {cohortEventsQuery} | project cohortEvents= replace(@'\\[', @'\\1', tostring(set_name)) | project cohortEvents= replace(@'\\]', @'\\1', cohortEvents)"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "40bc31ca-6b81-4352-909f-c89f99709f0d",
            "version": "KqlParameterItem/1.0",
            "name": "processCohortEvents1",
            "type": 1,
            "description": "Get cohort query results",
            "query": "{getCohortEventsQuery}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "c2550954-dd71-4f65-ae6e-e5e0b08db15e",
            "version": "KqlParameterItem/1.0",
            "name": "processCohortEvents2",
            "type": 1,
            "description": "Merge cohort query results",
            "query": "print cohorts= '{processCohortEvents1}' \n | project cohorts= replace(@'\\[', @'\\1', tostring(cohorts))\n | project cohorts= replace(@'\\]', @'\\1', cohorts)\n",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "5f624496-5eaf-4c14-a16f-6dbb85128e63",
            "version": "KqlParameterItem/1.0",
            "name": "userEventsList",
            "type": 1,
            "description": "Merge cohort and user Events",
            "isRequired": true,
            "query": "let userEvents = '{userEventsQuery}';\r\nlet cohortEvents = '{processCohortEvents2}';\r\nlet userEventsString = iff(strlen(userEvents)>0 and strlen(cohortEvents)>0, strcat(userEvents, ','), userEvents);\r\nprint strcat(userEventsString, cohortEvents)",
            "value": "\"*\"", 
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "7c3949b0-f3f7-40ce-a51d-e3ca186ce57f",
            "version": "KqlParameterItem/1.0",
            "name": "barChartQuery",
            "type": 1,
            "isRequired": true,
            "value": "let grain = 1h;   let mainTable = union pageViews,customEvents  | where timestamp > ago(1d)  | where iif('*' in (\"*\"), 1==1, name in (\"*\")); let resultTable = mainTable; resultTable  | summarize Events = count() by bin(timestamp, grain)   | order by timestamp asc",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (barChartMode == 'TimeBar'), result = 'let grain = iff({isTimeRange}, {ByValue}, 1h);   let mainTable = union {Whoused}  | where timestamp {TimeRange}  | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList})) {filters}; let resultTable = {mainTableQuery}; resultTable  | summarize Events = count() by bin(timestamp, grain)   | order by timestamp asc'",
                "criteriaContext": {
                  "leftOperand": "barChartMode",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "TimeBar",
                  "resultValType": "static",
                  "resultVal": "let grain = iff({isTimeRange}, {ByValue}, 1h);   let mainTable = union {Whoused}  | where timestamp {TimeRange}  | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList})) {filters}; let resultTable = {mainTableQuery}; resultTable  | summarize Events = count() by bin(timestamp, grain)   | order by timestamp asc"
                }
              },
              {
                "condition": "if (barChartMode == 'ByValueBar'), result = 'let mainTable = union {Whoused}  | where timestamp {TimeRange}  | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList})) {filters}; let byTable = {mainTableQuery}; let queryTable = {byTableQuery}; let byCohortTable = queryTable  | project dimension, timestamp;  let topSegments = byCohortTable  | summarize Events = count() by dimension  | top 10 by Events   | summarize makelist(dimension);  let topEventMetrics = byCohortTable  | where dimension in (topSegments);  let otherEventUsers = byCohortTable  | where dimension !in (topSegments)   | extend dimension = \"Other\";  otherEventUsers  | union topEventMetrics  | summarize Events = count() by dimension   | order by dimension asc'",
                "criteriaContext": {
                  "leftOperand": "barChartMode",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "ByValueBar",
                  "resultValType": "static",
                  "resultVal": "let mainTable = union {Whoused}  | where timestamp {TimeRange}  | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList})) {filters}; let byTable = {mainTableQuery}; let queryTable = {byTableQuery}; let byCohortTable = queryTable  | project dimension, timestamp;  let topSegments = byCohortTable  | summarize Events = count() by dimension  | top 10 by Events   | summarize makelist(dimension);  let topEventMetrics = byCohortTable  | where dimension in (topSegments);  let otherEventUsers = byCohortTable  | where dimension !in (topSegments)   | extend dimension = \"Other\";  otherEventUsers  | union topEventMetrics  | summarize Events = count() by dimension   | order by dimension asc"
                }
              },
              {
                "condition": "else result = 'let mainTable = union {Whoused}  | where timestamp {TimeRange}  | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList})) {filters}; let queryTable = {mainTableQuery};  let splitTable = {splitTableQuery}; let cohortedTable = splitTable  | summarize events_Counts = count() by bin(timestamp, {ByValue}), dimension;  let topSegments = cohortedTable  | summarize sumDimension = sum(events_Counts) by dimension  | project dimension, sumDimension  | top 5 by sumDimension desc nulls last  | summarize makelist(dimension); cohortedTable     | extend dimension = iff(dimension in (topSegments), dimension, \"Other\")'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "let mainTable = union {Whoused}  | where timestamp {TimeRange}  | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList})) {filters}; let queryTable = {mainTableQuery};  let splitTable = {splitTableQuery}; let cohortedTable = splitTable  | summarize events_Counts = count() by bin(timestamp, {ByValue}), dimension;  let topSegments = cohortedTable  | summarize sumDimension = sum(events_Counts) by dimension  | project dimension, sumDimension  | top 5 by sumDimension desc nulls last  | summarize makelist(dimension); cohortedTable     | extend dimension = iff(dimension in (topSegments), dimension, \"Other\")"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - querySegments"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let mainTable = union {Whoused}\n | where timestamp {TimeRange}\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList}))\r\n {filters};\r\n  let resultTable = {mainTableQuery};\n resultTable\n| summarize Events = dcount(itemId)\n| evaluate narrow()\n| project Column, Value = toreal(Value)\n| project Column = 'events', Value",
        "size": 3,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "formatter": 1,
            "formatOptions": {}
          },
          "leftContent": {
            "columnMatch": "Value",
            "formatter": 12,
            "formatOptions": {},
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2
              }
            }
          },
          "rightContent": {
            "columnMatch": "Column",
            "formatter": 8,
            "formatOptions": {}
          },
          "showBorder": false,
          "size": "full"
        }
      },
      "customWidth": "90",
      "name": "query - headTile",
      "styleSettings": {
        "maxWidth": "calc(100% - 180px)"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "b769f9e7-0fbf-44cf-bc09-ad82f941c961",
            "version": "KqlParameterItem/1.0",
            "name": "ChartType",
            "label": "Chart Type",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[{ \"value\": \"barChart\", \"label\": \"Bar chart\", \"selected\":true }, { \"value\": \"lineChart\", \"label\": \"Line chart\"}, { \"value\": \"areaChart\", \"label\": \"Area chart\"}]\r\n",
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "d2fb9d29-b3dd-4feb-affa-fb90208632fa",
            "version": "KqlParameterItem/1.0",
            "name": "chartTypeValue",
            "type": 1,
            "isRequired": true,
            "value": "barChart",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (isTimeRange == 'false'), result = 'barChart'",
                "criteriaContext": {
                  "leftOperand": "isTimeRange",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "false",
                  "resultValType": "static",
                  "resultVal": "barChart"
                }
              },
              {
                "condition": "else result = ChartType",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "param",
                  "resultVal": "ChartType"
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          }
        ],
        "style": "formVertical",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": {
        "parameterName": "isTimeRange",
        "comparison": "isEqualTo",
        "value": "true"
      },
      "customWidth": "20",
      "name": "parameters - chartType",
      "styleSettings": {
        "maxWidth": "180px"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{barChartQuery}",
        "size": 0,
        "aggregation": 3,
        "showAnnotations": true,
        "showAnalytics": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibility": {
        "parameterName": "chartTypeValue",
        "comparison": "isEqualTo",
        "value": "barChart"
      },
      "showPin": true,
      "name": "query - barChart",
      "styleSettings": {
        "progressStyle": "squares"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{barChartQuery}",
        "size": 0,
        "aggregation": 3,
        "showAnnotations": true,
        "showAnalytics": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "linechart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "chartTypeValue",
          "comparison": "isEqualTo",
          "value": "lineChart"
        },
        {
          "parameterName": "isTimeRange",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "chartTypeValue",
        "comparison": "isEqualTo",
        "value": "lineChart"
      },
      "showPin": true,
      "name": "query - lineChart",
      "styleSettings": {
        "progressStyle": "squares"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{barChartQuery}",
        "size": 0,
        "aggregation": 3,
        "showAnnotations": true,
        "showAnalytics": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "areachart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "chartTypeValue",
          "comparison": "isEqualTo",
          "value": "areaChart"
        },
        {
          "parameterName": "isTimeRange",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "chartTypeValue",
        "comparison": "isEqualTo",
        "value": "areaChart"
      },
      "showPin": true,
      "name": "query - areaChart",
      "styleSettings": {
        "progressStyle": "squares"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "explicit",
        "loadButtonText": "View More Insights",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "#### {TimeRange}"
            },
            "name": "text - timeRange1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let mainTable = union {Whoused}\r\n | where timestamp {TimeRange}\r\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList})) {filters};\r\n let resultTable = {mainTableQuery};\r\n resultTable\r\n | summarize USERS = dcount(user_Id), SESSIONS = dcount(session_Id)\r\n | evaluate narrow()\r\n | project Column, Value, id = case(Column =='SESSIONS', 'community-Workbooks/UsageMetrics/Usage - Sessions','community-Workbooks/UsageMetrics/Usage - Users'), UsageViewType = case(Column =='SESSIONS', 'Sessions', 'Users')",
              "size": 3,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Column",
                  "formatter": 1,
                  "formatOptions": {
                    "linkTarget": "OpenBlade",
                    "bladeOpenContext": {
                      "bladeName": "UsageWorkbookViewerBlade",
                      "extensionName": "AppInsightsExtension",
                      "bladeParameters": [
                        {
                          "name": "ComponentId",
                          "source": "parameter",
                          "value": "componentId"
                        },
                        {
                          "name": "ConfigurationId",
                          "source": "column",
                          "value": "id"
                        },
                        {
                          "name": "UsageViewType",
                          "source": "column",
                          "value": "UsageViewType"
                        }
                      ]
                    }
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {},
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": true,
                "size": "auto"
              }
            },
            "name": "query - usersTile"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "732d8494-7a52-426a-a963-27977fe443d0",
                  "version": "KqlParameterItem/1.0",
                  "name": "Properties",
                  "label": "PROPERTIES",
                  "type": 2,
                  "description": "Please select a maximum of 6 items.",
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "let customDimension = datatable(value:string, label:string, group: string){formattedCustomDimensions};\r\nlet dimensionList = datatable(value:string, label:string, group: string){usageStandardDimension}\r\n | order by label asc;\r\nunion dimensionList, customDimension\r\n    | extend value= replace(@'\\\"', @'/:/\\1', tostring(value))\r\n    | project value = strcat('{\"value\": \"',value,'\",',' \"label\": \"',label,'\"}'), label, group",
                  "typeSettings": {
                    "limitSelectTo": 6,
                    "additionalResourceOptions": [
                      "value::3"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "value": [
                    "{\"value\": \"client_CountryOrRegion\", \"label\": \"Country or region\"}",
                    "{\"value\": \"client_OS\", \"label\": \"Operating system\"}",
                    "{\"value\": \"client_Browser\", \"label\": \"Browser version\"}"
                  ]
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.insights/components"
            },
            "name": "parameters - 15"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "276061c1-8556-47e1-9fe8-49e1b5f30427",
                  "version": "KqlParameterItem/1.0",
                  "name": "columnNameQuery",
                  "type": 1,
                  "value": "print '{\"value\": \"client_CountryOrRegion\", \"label\": \"Country or region\"}','{\"value\": \"client_OS\", \"label\": \"Operating system\"}','{\"value\": \"client_Browser\", \"label\": \"Browser version\"}' | evaluate narrow() | project name = parse_json(Value).value | summarize name = tostring(make_list(name)) | project name= substring(name, 1, strlen(name)-2) | project name= replace(@'\"', @'\\1', name) | project name= replace(@'/:/', @'\"', tostring(name))",
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "condition": "if (Properties is empty ), result = 'print '''",
                      "criteriaContext": {
                        "leftOperand": "Properties",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "print ''"
                      }
                    },
                    {
                      "condition": "else result = 'print {Properties} | evaluate narrow() | project name = parse_json(Value).value | summarize name = tostring(make_list(name)) | project name= substring(name, 1, strlen(name)-2) | project name= replace(@'\"', @'\\1', name) | project name= replace(@'/:/', @'\"', tostring(name))'",
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "print {Properties} | evaluate narrow() | project name = parse_json(Value).value | summarize name = tostring(make_list(name)) | project name= substring(name, 1, strlen(name)-2) | project name= replace(@'\"', @'\\1', name) | project name= replace(@'/:/', @'\"', tostring(name))"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "412bb2fa-3a6a-4301-817f-c814a962be9b",
                  "version": "KqlParameterItem/1.0",
                  "name": "columnLabelQuery",
                  "type": 1,
                  "value": "print '{\"value\": \"client_CountryOrRegion\", \"label\": \"Country or region\"}','{\"value\": \"client_OS\", \"label\": \"Operating system\"}','{\"value\": \"client_Browser\", \"label\": \"Browser version\"}' | evaluate narrow() | project label = parse_json(Value).label, Row | summarize label = make_list(label) by tostring(Row) | project label= replace(@'\\[', @'\\1', tostring(label)) | project label= replace(@'\\]', @'\\1', label) | project label= replace(@'\"', @'\\1', label)",
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "condition": "if (Properties is empty ), result = 'print '''",
                      "criteriaContext": {
                        "leftOperand": "Properties",
                        "operator": "is Empty",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "print ''"
                      }
                    },
                    {
                      "condition": "else result = 'print {Properties} | evaluate narrow() | project label = parse_json(Value).label, Row | summarize label = make_list(label) by tostring(Row) | project label= replace(@'\\[', @'\\1', tostring(label)) | project label= replace(@'\\]', @'\\1', label) | project label= replace(@'\"', @'\\1', label)'",
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "print {Properties} | evaluate narrow() | project label = parse_json(Value).label, Row | summarize label = make_list(label) by tostring(Row) | project label= replace(@'\\[', @'\\1', tostring(label)) | project label= replace(@'\\]', @'\\1', label) | project label= replace(@'\"', @'\\1', label)"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "bce9a188-8ca9-4dbd-8932-e8bd8de1275c",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedProperties",
                  "type": 1,
                  "query": "{columnNameQuery}",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "33aa8135-eecc-43d0-ab23-53c73d1e817d",
                  "version": "KqlParameterItem/1.0",
                  "name": "labelOfSelectedProperties",
                  "type": 1,
                  "query": "{columnLabelQuery}",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "737850dd-0480-45d4-81b6-23922fb596d6",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertyColumn1",
                  "type": 1,
                  "description": "Column name for first property grid",
                  "isRequired": true,
                  "query": "let value = split('{selectedProperties}', ',')[0];\r\n print iff(isempty(value), '<unset>', value)",
                  "value": "client_CountryOrRegion",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "da94f8c8-21d9-4626-94ab-4676e1fb1561",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertyColumn2",
                  "type": 1,
                  "description": "Column name for second property grid",
                  "isRequired": true,
                  "query": "let value = split('{selectedProperties}', ',')[1];\r\n print iff(isempty(value), '<unset>', value)",
                  "value": "client_OS",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "2769f12c-16c9-43b2-8262-5bcf88fbc309",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertyColumn3",
                  "type": 1,
                  "description": "Column name for third property grid",
                  "isRequired": true,
                  "query": "let value = split('{selectedProperties}', ',')[2];\r\n print iff(isempty(value), '<unset>', value)",
                  "value": "client_Browser",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "30cc6cfa-dd0e-482d-8124-e752ac406141",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertyColumn4",
                  "type": 1,
                  "description": "Column name for four property grid",
                  "isRequired": true,
                  "query": "let value = split('{selectedProperties}', ',')[3];\r\n print iff(isempty(value), '<unset>', value)",
                  "value": "<unset>",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "900a04cf-59bd-48f0-ba3e-82b1e8688907",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertyColumn5",
                  "type": 1,
                  "description": "Column name for fifth property grid",
                  "isRequired": true,
                  "query": "let value = split('{selectedProperties}', ',')[4];\r\n print iff(isempty(value), '<unset>', value)",
                  "value": "<unset>",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "391fb4a3-340b-4a78-a311-b400cb967115",
                  "version": "KqlParameterItem/1.0",
                  "name": "propertyColumn6",
                  "type": 1,
                  "description": "Column name for sixth property grid",
                  "isRequired": true,
                  "query": "let value = split('{selectedProperties}', ',')[5];\r\n print iff(isempty(value), '<unset>', value)",
                  "value": "<unset>",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "407dabfe-31be-4cc4-84ae-8f1db8fa18a5",
                  "version": "KqlParameterItem/1.0",
                  "name": "column1Name",
                  "type": 1,
                  "description": "Column name for first property grid",
                  "query": "print split(\"{labelOfSelectedProperties}\", \",\")[0]",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "b1a720e5-688e-4141-a82f-6c813cb9baeb",
                  "version": "KqlParameterItem/1.0",
                  "name": "column2Name",
                  "type": 1,
                  "description": " Column name for second property grid",
                  "query": "print split(\"{labelOfSelectedProperties}\", \",\")[1]",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "a0b639b2-e49f-4953-8fa3-16e7381792b7",
                  "version": "KqlParameterItem/1.0",
                  "name": "column3Name",
                  "type": 1,
                  "description": "Column name for third property grid",
                  "query": "print split(\"{labelOfSelectedProperties}\", \",\")[2]",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "7c5ea397-c2bd-446d-8799-2f5377962cca",
                  "version": "KqlParameterItem/1.0",
                  "name": "column4Name",
                  "type": 1,
                  "description": "Column name for fourth property grid",
                  "query": "print split('{labelOfSelectedProperties}', ',')[3]",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "9e8c075d-090b-4d36-898a-01e4ec91560f",
                  "version": "KqlParameterItem/1.0",
                  "name": "column5Name",
                  "type": 1,
                  "description": "Column name for fifth property grid",
                  "query": "print split(\"{labelOfSelectedProperties}\", \",\")[4]",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                },
                {
                  "id": "15c86faa-dab0-4d51-aec8-e867b2f90bc6",
                  "version": "KqlParameterItem/1.0",
                  "name": "column6Name",
                  "type": 1,
                  "description": "Column name for sixth property grid",
                  "query": "print split(\"{labelOfSelectedProperties}\", \",\")[5]",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.insights/components"
            },
            "name": "parameters - 11"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let mainTable = union {Whoused}\r\n | where timestamp {TimeRange}\r\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList}))\r\n {filters};\r\n let queryTable = {mainTableQuery};\r\n let cohortedTable = queryTable\r\n | extend  dimension = {propertyColumn1}\r\n | extend dimension = iif(isempty(dimension) , \"<undefined>\", dimension)\r\n  | summarize hll = hll(itemId) by tostring(dimension)\r\n | extend Events = dcount_hll(hll)\r\n  | order by Events desc\r\n | serialize rank = row_number()\r\n | extend dimension = iff(rank > 5, 'Other', dimension)\r\n | summarize merged = hll_merge(hll) by tostring(dimension)\r\n | project ['{column1Name}'] = dimension, Counts = dcount_hll(merged);\r\n cohortedTable",
              "size": 3,
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Counts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              }
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "propertyColumn1",
              "comparison": "isNotEqualTo",
              "value": "<unset>"
            },
            "name": "query -  propertygrid1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let mainTable = union {Whoused}\r\n | where timestamp {TimeRange}\r\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList}))\r\n {filters};\r\n let queryTable = {mainTableQuery};\r\n let cohortedTable = queryTable\r\n | extend  dimension = {propertyColumn2}\r\n | extend dimension = iif(isempty(dimension) , \"<undefined>\", dimension)\r\n  | summarize hll = hll(itemId) by tostring(dimension)\r\n | extend Events = dcount_hll(hll)\r\n  | order by Events desc\r\n | serialize rank = row_number()\n | extend dimension = iff(rank > 5, 'Other', dimension)\r\n | summarize merged = hll_merge(hll) by tostring(dimension)\r\n | project ['{column2Name}'] = dimension, Counts = dcount_hll(merged);\r\n cohortedTable",
              "size": 3,
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Counts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              }
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "propertyColumn2",
              "comparison": "isNotEqualTo",
              "value": "<unset>"
            },
            "name": "query -  propertygrid2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let mainTable = union {Whoused}\r\n | where timestamp {TimeRange}\r\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList}))\r\n {filters};\r\n let queryTable = {mainTableQuery};\r\n let cohortedTable = queryTable\r\n | extend  dimension = {propertyColumn3}\r\n | extend dimension = iif(isempty(dimension) , \"<undefined>\", dimension)\r\n | summarize hll = hll(itemId) by tostring(dimension)\r\n | extend Events = dcount_hll(hll)\r\n  | order by Events desc\r\n | serialize rank = row_number()\r\n | extend dimension = iff(rank > 5, 'Other', dimension)\r\n | summarize merged = hll_merge(hll) by tostring(dimension)\r\n | project ['{column3Name}'] = dimension, Counts = dcount_hll(merged);\r\n cohortedTable",
              "size": 3,
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Counts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              }
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "propertyColumn3",
              "comparison": "isNotEqualTo",
              "value": "<unset>"
            },
            "name": "query -  propertygrid3"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let mainTable = union {Whoused}\r\n | where timestamp {TimeRange}\r\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList}))\r\n {filters};\r\n let queryTable = {mainTableQuery};\r\n let cohortedTable = queryTable\r\n | extend  dimension = {propertyColumn4}\r\n | extend dimension = iif(isempty(dimension) , \"<undefined>\", dimension)\r\n  | summarize hll = hll(itemId) by tostring(dimension)\r\n | extend Events = dcount_hll(hll)\r\n  | order by Events desc\r\n | serialize rank = row_number()\r\n | extend dimension = iff(rank > 5, 'Other', dimension)\r\n | summarize merged = hll_merge(hll) by tostring(dimension)\r\n | project ['{column4Name}'] = dimension, Counts = dcount_hll(merged);\r\n cohortedTable",
              "size": 3,
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Counts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              }
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "propertyColumn4",
              "comparison": "isNotEqualTo",
              "value": "<unset>"
            },
            "name": "query -  propertygrid4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let mainTable = union {Whoused}\r\n | where timestamp {TimeRange}\r\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList}))\r\n {filters};\r\n let queryTable = {mainTableQuery};\r\n let cohortedTable = queryTable\r\n | extend  dimension = {propertyColumn5}\r\n | extend dimension = iif(isempty(dimension) , \"<undefined>\", dimension)\r\n  | summarize hll = hll(itemId) by tostring(dimension)\r\n | extend Events = dcount_hll(hll)\r\n  | order by Events desc\r\n | serialize rank = row_number()\r\n | extend dimension = iff(rank > 5, 'Other', dimension)\r\n | summarize merged = hll_merge(hll) by tostring(dimension)\r\n | project ['{column5Name}'] = dimension, Counts = dcount_hll(merged);\r\n cohortedTable",
              "size": 3,
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Counts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              }
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "propertyColumn5",
              "comparison": "isNotEqualTo",
              "value": "<unset>"
            },
            "name": "query -  propertygrid5"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let mainTable = union {Whoused}\r\n | where timestamp {TimeRange}\r\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList}))\r\n {filters};\r\n let queryTable = {mainTableQuery};\r\n let cohortedTable = queryTable\r\n | extend  dimension = {propertyColumn6}\r\n | extend dimension = iif(isempty(dimension) , \"<undefined>\", dimension)\r\n  | summarize hll = hll(itemId) by tostring(dimension)\r\n | extend Events = dcount_hll(hll)\r\n  | order by Events desc\r\n | serialize rank = row_number()\r\n | extend dimension = iff(rank > 5, 'Other', dimension)\r\n | summarize merged = hll_merge(hll) by tostring(dimension)\r\n | project ['{column6Name}'] = dimension, Counts = dcount_hll(merged);\r\n cohortedTable",
              "size": 3,
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Counts",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                ]
              }
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "propertyColumn6",
              "comparison": "isNotEqualTo",
              "value": "<unset>"
            },
            "name": "query -  propertygrid6"
          },
          {
            "type": 1,
            "content": {
              "json": "    "
            },
            "name": "text - 13",
            "styleSettings": {
              "margin": "20px"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "#### EVENT STATISTICS"
            },
            "name": "text - 12"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "d80fe630-0e3e-49db-b586-0df42bd7b919",
                  "version": "KqlParameterItem/1.0",
                  "name": "FilterByName",
                  "label": "Filter by name",
                  "type": 1,
                  "value": "",
                  "resourceType": "microsoft.insights/components"
                }
              ],
              "style": "above",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.insights/components"
            },
            "customWidth": "100",
            "name": "parameters - eventsFilterbox",
            "styleSettings": {
              "maxWidth": "170px"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "📄 Pageview ​ ‍ 📅 Event ​ ‍ 💬 Request"
            },
            "customWidth": "30",
            "name": "text - 12",
            "styleSettings": {
              "padding": "20px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let filterByName = '{FilterByName}';\r\nlet mainTable = union {Whoused}\r\n | where timestamp {TimeRange}\r\n | where iif('*' in ({userEventsList}), 1==1, name in ({userEventsList}))\r\n {filters}\r\n | where iff(isempty(filterByName), 1==1, name contains filterByName);\r\n let queryTable = {mainTableQuery}; \r\n queryTable\r\n | summarize arg_max(timestamp, itemId), Users=dcount(user_Id), Sessions = dcount(session_Id), Instances= count(), Item = any(itemId) by name, itemType\r\n| extend rank = 2\r\n | union (queryTable\r\n | summarize Users = dcount(user_Id), Sessions = dcount(session_Id), Instances = count(), Item = any(itemId)\r\n | extend name = 'Overall', rank = 1)\r\n | extend jkey = 1\r\n | join kind = inner (queryTable \r\n | summarize AllUsers = dcount(user_Id), AllSessions = dcount(session_Id), AllInstances = count(), Item = any(itemId)\r\n | extend jkey = 1) on jkey \r\n | where iif(isempty(filterByName), 1==1, name contains filterByName)\r\n | project ['Name'] = case( itemType == 'pageView',  strcat('📄 ', name), itemType == 'customEvent', strcat('📅 ', name),  itemType == 'request', strcat('💬 ', name), name) , ['Users'] = Users,\r\n ['Sessions'] = Sessions,\r\n ['Count'] = Instances , rank, Item\r\n | order by rank asc, ['Users'] desc\r\n | project-away rank\r\n",
              "size": 0,
              "showAnalytics": true,
              "queryType": 0,
              "resourceType": "microsoft.insights/components",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Name",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "Item",
                      "linkTarget": "CustomEventDetails",
                      "showIcon": false
                    },
                    "tooltipFormat": {
                      "tooltip": "End-to-end transaction details"
                    }
                  },
                  {
                    "columnMatch": "Users",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Sessions",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Count",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Item",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 17,
                  "min": null,
                  "max": null
                }
              }
            },
            "name": "query - EventGrid"
          }
        ]
      },
      "name": "group - 21"
    }
  ]
}