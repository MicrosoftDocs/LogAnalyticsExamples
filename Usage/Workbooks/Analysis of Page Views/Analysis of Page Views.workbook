{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Analysis of Page Views\nPage views correspond to user activity in your app. Understanding how your users interact with your pages will give you good insights into what is working in your app and what aspects need improvements. \n\nThis report will help you understand common page view behaviors like:\n* Usage\n* Time spent on page\n* Time to first interaction\n* Exit rates \n\nIf your telemetry does not include page views, then follow these [instructions](https://docs.microsoft.com/en-us/azure/application-insights/app-insights-javascript) to begin collecting -- it is relatively straightforward."
      },
      "name": "Description text"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "2006c356-d32b-4f16-a22c-6a76d0e84288",
            "version": "KqlParameterItem/1.0",
            "name": "Pages",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let mostUsedEvent = union pageViews\n| where timestamp >= ago(7d)\n| summarize Count = count() by name\n| top 3 by Count desc\n| summarize makelist(name);\nunion pageViews\n| where timestamp >= ago(7d)\n| summarize Count = count() by name\n| extend IsSelected = iff(name in (mostUsedEvent), true, false)\n| order by Count desc\n| project v = name, t = name, IsSelected\n| union (\ndatatable(v:string, t:string, IsSelected:boolean)[\n'*', 'All Page Views', false\n]\n)"
          },
          {
            "id": "03ad1f6b-7d7c-4abc-8b8d-446621ad479e",
            "version": "KqlParameterItem/1.0",
            "name": "OtherFilters",
            "type": 1,
            "description": null,
            "value": ""
          },
          {
            "id": "815b8c50-0d4a-4374-a073-bc9394103aed",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 2,
            "description": null,
            "isRequired": true,
            "query": "datatable(key:string, display:string) \n[ \n\"1h\", \"Last Hour\", \n\"1d\", \"Last 24 hours\", \n\"2d\", \"Last 48 hours\", \n\"3d\", \"Last 3 days\", \n\"7d\", \"Last 7 days\", \n\"14d\", \"Last 14 days\", \n\"30d\", \"Last 30 days\", \n\"60d\", \"Last 60 days\", \n\"90d\", \"Last 90 days\"\n] ",
            "value": "30d"
          },
          {
            "id": "4548f4fe-0130-42c9-b796-385cd12ccb24",
            "version": "KqlParameterItem/1.0",
            "name": "OptimizeCalculationsFor",
            "type": 2,
            "description": "Use this parameter to essentially set the number of user sessions to use in calculations (sampling). This allows you to find the right balance between performance and accuracy for your analysis. Optimize for: Performance = 10,000 sessions, Balance = 100,000 samples, Accuracy = 1,000,000 sessions",
            "isRequired": true,
            "query": "datatable(x:string, y:string)[\n'10000', 'Performance',\n'100000', 'Balance',\n'1000000', 'Accuracy'\n]",
            "value": "100000"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "Common parameter block"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n## Usage\nThis section helps you understand how the pages of your app are used -- in terms of # of users, sessions and views. "
      },
      "name": "Usage section text"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let timeRange = {TimeRange};\nlet allEvents = pageViews\n| where timestamp > ago(timeRange);\nlet interestingEvents = allEvents\n| where name in ({Pages}) or '*' in ({Pages}) \n{OtherFilters};\ninterestingEvents\n| summarize Users = dcount(user_Id), Sessions = dcount(session_Id), Instances = count() by name\n| extend rank = 2, name = strcat('🔷 ', name)\n| union (interestingEvents\n        | summarize Users = dcount(user_Id), Sessions = dcount(session_Id), Instances = count()\n        | extend name = '🔶 Overall', rank = 1)\n| extend jkey = 1\n| join kind = inner (allEvents \n                    | summarize AllUsers = dcount(user_Id), AllSessions = dcount(session_Id), AllInstances = count()\n                    | extend jkey = 1) on jkey \n| project ['Page Name'] = name, ['Unique Users'] = Users, ['As % of app Users'] = round(100.0 * Users / AllUsers, 2),\n          ['Unique Sessions'] = Sessions, ['As % of app Sessions'] = round(100.0 * Sessions / AllSessions, 2),\n          ['Total Page Views'] = Instances , ['As % of app Page Views'] = round(100.0 * Instances / AllInstances, 2), rank\n| order by rank asc, ['Unique Users'] desc\n| project-away rank",
        "size": 1,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Unique Users",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Unique Sessions",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "green"
              }
            },
            {
              "columnMatch": "Total Page Views",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "yellow"
              }
            }
          ],
          "filter": true
        }
      },
      "showPin": true,
      "name": "Usage grid"
    },
    {
      "type": 1,
      "content": {
        "json": "- The `As % of App Users/Sessions/Views` columns compare the usage of the selected page view with that of the whole app.\n"
      },
      "name": "Usage footer text"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n## Time Spent on Page\nThis report helps you understand the time spent by customers in your pages. Longer time spent pages usually indicates good engagement and is generally the desired behavior."
      },
      "name": "Time spent on page text"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "0411936a-4cb9-44dd-946d-b449ce3b284e",
            "version": "KqlParameterItem/1.0",
            "name": "IgnoreDurationsOver",
            "type": 1,
            "description": "Use this parameter to filter our page views that took more time that is possible (for example left open in a non-active tab). The default is 1 hour. ",
            "isRequired": true,
            "query": "datatable(x:string)[ '3600s' ]"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "Time spent on page parameter block"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let timeRange = {TimeRange};\nlet samples = {OptimizeCalculationsFor};\nlet pageDurationThreshold = {IgnoreDurationsOver};\nlet allEvents = union pageViews\n| where timestamp > ago(timeRange);\nlet allInterestingEvents = allEvents\n| where name in ({Pages}) or '*' in ({Pages}) \n{OtherFilters};\nlet sampledSessions = materialize(allInterestingEvents\n| summarize by session_Id\n| sample samples\n| summarize makelist(session_Id, samples));\nlet data = allInterestingEvents\n| where session_Id in (sampledSessions)\n| project session_Id, timestamp, name\n| join kind= inner (allEvents\n        | where session_Id in (sampledSessions)\n        | project session_Id, timestamp\n        ) on session_Id \n| project session_Id, TimeDiff = timestamp  - timestamp1, name, timestamp\n| where TimeDiff > 0s and TimeDiff <= pageDurationThreshold\n| summarize SecondsSpentOnPage = min(TimeDiff) / 1s by session_Id, name, timestamp;\ndata\n| summarize Instances = count(), (Median, p75, p90) = percentiles(SecondsSpentOnPage, 50, 75, 90), Mean = avg(SecondsSpentOnPage) by name\n| extend rank = 2, name = strcat('🔷 ', name)\n| union (data\n        | summarize Instances = count(), (Median, p75, p90) = percentiles(SecondsSpentOnPage, 50, 75, 90), Mean = avg(SecondsSpentOnPage)\n        | extend name = '🔶 Overall', rank = 1)\n| order by rank asc, Median desc\n| project-away rank\n| project ['Page Name'] = name, ['Sampled Page Views'] = Instances, ['Median (seconds)'] = round(Median, 1), ['75th Percentile (seconds)'] = round(p75, 1), ['90th Percentile (seconds)'] = round(p90, 1), ['Mean (seconds)'] = round(Mean, 1)",
        "size": 1,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Sampled Page Views",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Median (seconds)",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "yellow"
              }
            },
            {
              "columnMatch": "90th Percentile (seconds)",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "red"
              }
            }
          ],
          "filter": true
        }
      },
      "showPin": true,
      "name": "Time spent on page grid"
    },
    {
      "type": 1,
      "content": {
        "json": "- The calculations may use sampling based on the `OptimizeCalculationsFor` parameter. \n- Time Spent on Page does not consider exit pages (last page of the session) in this calculations. The `Sampled Page Views` column may be fewer than the sampling count of {OptimizeCalculationsFor} because of this.\n"
      },
      "name": "Time spent on page footer"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n## Time to First Interaction\nThis report helps you understand the time taken by customers to first interact with critical features of your app. It can help you uncover issues with discoverability of your features or the intuitiveness of your app's UI/flow."
      },
      "name": "Time to First Interaction text"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "65e9a492-2e89-477a-a041-e99a61481c65",
            "version": "KqlParameterItem/1.0",
            "name": "TimeFrom",
            "type": 2,
            "description": "For users, the first use is calculated as the first use within the time range. It is possible that the user started using your app before the time range.",
            "isRequired": true,
            "query": "datatable(x:string, y:string)[\n'session_Id', 'Start of the Session',\n'user_Id', 'First use by Anonymous User ⚠️',\n'user_AuthenticatedId', 'First use by Authenticated User ⚠️',\n];",
            "value": "session_Id"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "Time to First Interaction parameter block"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let samples = {OptimizeCalculationsFor};\nlet allEvents = union customEvents, pageViews\n| where timestamp > ago({TimeRange});\nlet allInterestingEvents = allEvents\n| where name in ({Pages}) or '*' in ({Pages})\n{OtherFilters};\nlet sampledSessions = materialize(allInterestingEvents\n| summarize by {TimeFrom}\n| sample samples\n| summarize makelist({TimeFrom}, samples));\nlet sessionStart = allEvents\n| where {TimeFrom} in (sampledSessions)\n| summarize Start = min(timestamp) by {TimeFrom};\nlet firstInterestingEvent = allInterestingEvents\n| where {TimeFrom} in (sampledSessions)\n| summarize Interaction = min(timestamp) by {TimeFrom}, name;\nlet segmentedFirstInteraction = firstInterestingEvent\n| join kind = inner (sessionStart) on {TimeFrom}\n| project FirstInteractionTime = Interaction - Start, name\n| summarize Sessions = count(), Mean = avg(FirstInteractionTime), (Median, p75, p90) = percentiles(FirstInteractionTime, 50, 75, 90) by name;\nsegmentedFirstInteraction\n| union (firstInterestingEvent\n| summarize Interaction = min(Interaction) by {TimeFrom}\n| join kind = inner (sessionStart) on {TimeFrom}\n| project FirstInteractionTime = Interaction - Start\n| summarize Sessions = count(), Mean = avg(FirstInteractionTime), (Median, p75, p90) = percentiles(FirstInteractionTime, 50, 75, 90)\n| extend name = '🔶 Overall', o = 0m)\n| extend Mean = round(Mean / 1m, 2), Median = round(Median / 1m, 2), p75 = round(p75 / 1m, 2), p90 = round(p90 / 1m, 2)\n| order by o asc, Median asc, Sessions desc\n| project [\"Page Name\"] = name, ['Sampled Views'] = Sessions, ['Median (in minutes)'] = Median, ['75th Percentile (in minutes)'] = p75, ['90th Percentile (in minutes)'] = p90, ['Mean (in minutes)'] = Mean\n",
        "size": 1,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Sampled Views",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Median (in minutes)",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "yellow"
              }
            },
            {
              "columnMatch": "90th Percentile (in minutes)",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "red"
              }
            }
          ]
        }
      },
      "name": "Time to First Interaction grid"
    },
    {
      "type": 1,
      "content": {
        "json": "- The calculation may use sampling based on the `OptimizeCalculationsFor` parameter. "
      },
      "name": "Time to First Interaction footer"
    },
    {
      "type": 1,
      "content": {
        "json": "---\n## Page Exit Rates\nA page view is said to have contributed to an _exit_ when it is the last page viewed in the session. The user is presumed to have exited your app -- either by navigating to another app or closing the app/browser. \n\nA page's _exit rate_ is the percentages of views that were the last in the session. "
      },
      "name": "Page Exit Rates text"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let samples = {OptimizeCalculationsFor};\nlet allEvents = pageViews\n| where timestamp > ago({TimeRange});\nlet allInterestingEvents = allEvents\n| where name in ({Pages}) or '*' in ({Pages})\n{OtherFilters};\nlet sampledSessions = materialize(allInterestingEvents\n| summarize by session_Id\n| sample samples\n| summarize makelist(session_Id, samples));\nlet bounces = allEvents\n| where session_Id in (sampledSessions)\n| summarize (timestamp, name) = argmax(timestamp, name) by session_Id;\nlet sessionsWithInterestingEvents = allInterestingEvents\n| where session_Id in (sampledSessions);\nlet allSessionData = sessionsWithInterestingEvents\n| summarize Sessions = dcount(session_Id) by name\n| union (sessionsWithInterestingEvents\n        | summarize Sessions = dcount(session_Id) | extend name = 'Overall');\nlet bouncesWithInterestingEvents = bounces\n| where name in ({Pages}) or '*' in ({Pages});\nbouncesWithInterestingEvents\n| summarize BouncedSessions = dcount(session_Id) by name\n| extend rank = 2\n| union (bouncesWithInterestingEvents\n        | summarize BouncedSessions = dcount(session_Id) | extend name = 'Overall', rank = 1)\n| join kind=inner\n(\n    allSessionData\n)\non name\n| extend BounceRate = round(100.0 * BouncedSessions / Sessions, 2)\n| order by rank asc, BounceRate desc\n| project ['Page Name'] = iff(name == 'Overall', '🔶 Overall', strcat('🔷 ', name)), ['Sampled Sessions with Page View'] = Sessions, ['Sampled Sessions Ended after Page View'] = BouncedSessions, ['Exit Rate (%)'] = BounceRate",
        "size": 1,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Sampled Sessions",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Exit Rate (%)",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": 100,
                "palette": "red"
              }
            }
          ],
          "filter": true
        }
      },
      "showPin": true,
      "name": "Page Exit Rates grid"
    },
    {
      "type": 1,
      "content": {
        "json": "- The calculation may use sampling based on the `OptimizeCalculationsFor` parameter. "
      },
      "name": "Page Exit Rates footer"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
