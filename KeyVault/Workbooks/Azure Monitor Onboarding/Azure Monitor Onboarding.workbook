{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "d5d7c033-d737-495b-a84c-bdd7e4e78a08",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type =~ 'microsoft.keyvault/vaults'\r\n| summarize by subscriptionId\r\n| union (Resources\r\n| where type =~ 'microsoft.keyvault/vaults'\r\n| summarize Count = count() by subscriptionId\r\n| top 1 by Count desc)\r\n| summarize Count = count() by subscriptionId\r\n| project value = subscriptionId, label = subscriptionId, selected = Count > 1",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "3be310b0-14a6-416f-ae3c-0a98fda5c729",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroups",
            "label": "Resource groups",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type in~('microsoft.keyvault/vaults')\r\n| summarize Count = count() by resourceGroup\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project value = resourceGroup, label = resourceGroup, selected = Rank == 1",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "827a53dc-62fe-49ee-88a6-f9f751ed5ab3",
            "version": "KqlParameterItem/1.0",
            "name": "Vaults",
            "label": "Key vaults",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "\"",
            "delimiter": ",",
            "query": "Resources\r\n| where type =~ 'microsoft.keyvault/vaults' and resourceGroup in~({ResourceGroups}) \r\n| project name, id\r\n| union (Resources\r\n| where type =~ 'microsoft.keyvault/vaults' and resourceGroup in~({ResourceGroups}) \r\n| order by name asc\r\n| take 5\r\n| project id, name)\r\n| summarize Count = count() by id, name\r\n| order by name asc\r\n| project value = id, label = id, selected = Count > 1",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": ""
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "KeyVault-Parameters",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "862be1c5-1cd0-42cb-be09-436a38a9d161",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceScope",
            "label": "Resource scope",
            "type": 7,
            "isRequired": true,
            "query": "Resources\r\n| take 1\r\n| project x = dynamic([\"microsoft.keyvault/vaults\", \"microsoft.resources/resourcegroups\", \"microsoft.resources/subscriptions\"])\r\n| mvexpand x to typeof(string)\r\n| extend jkey = 1\r\n| join kind = inner (Resources \r\n| where id in~ ({Vaults})\r\n| summarize Subs = dcount(subscriptionId), resourceGroups = dcount(resourceGroup), resourceCount = count()\r\n| extend jkey = 1) on jkey\r\n| project x, label = 'x', selected = case(x in ('microsoft.keyvault/vaults') and resourceCount <= 3, true, x == 'microsoft.resources/resourcegroups' and resourceGroups <= 3 and resourceCount > 3, true, x == 'microsoft.resources/subscriptions' and resourceGroups > 3 and resourceCount > 3, true, false)\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "1",
        "comparison": "isEqualTo",
        "value": "2"
      },
      "name": "parameters - 13"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "77ba53ba-5914-4226-b790-314de0c13cb4",
            "version": "KqlParameterItem/1.0",
            "name": "Numerator",
            "type": 1,
            "isRequired": true,
            "query": "let MissingTable = datatable(ResourceId: string) [];\r\nlet onboardedResources = union isfuzzy=true MissingTable, (AzureDiagnostics\r\n| extend ResourceId = tolower(column_ifexists('ResourceId', ''))\r\n| where ResourceId in~({Vaults})\r\n| summarize by ResourceId);\r\nlet data = range i from 1 to 1 step 1\r\n| project resource = todynamic(tolower(strcat('[', '{Vaults}', ']')))\r\n| mvexpand resource to typeof(string) limit 10000\r\n| join kind = fullouter (onboardedResources) on $left.resource == $right.ResourceId;\r\ndata\r\n| summarize Resources = countif(isnotempty(ResourceId))\r\n| extend Rank = 1, Title = 'Enabled'\r\n| union (data\r\n| summarize Resources = countif(isempty(ResourceId))\r\n| extend Rank = 2, Title = 'Disabled', Footer = 'Change')\r\n| order by Rank asc\r\n| extend Subtitle = '⎯⎯⎯'\r\n| where Title == 'Enabled'\r\n| project Numerator = strcat('# ', column_ifexists('Resources',0))",
            "crossComponentResources": [
              "{Vaults}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 2592000000
            },
            "queryType": 0,
            "resourceType": "{ResourceScope}"
          },
          {
            "id": "b65ed168-b4d2-452d-ba0e-04c6528b9827",
            "version": "KqlParameterItem/1.0",
            "name": "Denominator",
            "type": 1,
            "isRequired": true,
            "query": "where type =~ 'microsoft.keyvault/vaults' and resourceGroup in~({ResourceGroups}) \r\n| summarize Selected = countif(id in ({Vaults:value})), Total = count()\r\n| project Message = strcat(' / ', Total)",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 4"
    },
    {
      "type": 1,
      "content": {
        "json": "{Numerator}{Denominator}\r\n_Key Vaults Fully Onboarded to Key Vault Insights_"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Numerator",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "Denominator",
          "comparison": "isNotEqualTo"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "Numerator",
        "comparison": "isNotEqualTo"
      },
      "name": "text - 5"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let MissingTable = datatable(ResourceId: string) [];\r\nlet onboardedResources = union isfuzzy=true MissingTable, (AzureDiagnostics\r\n| extend ResourceId = tolower(column_ifexists('ResourceId', ''))\r\n| where ResourceId in~({Vaults})\r\n| summarize by ResourceId);\r\nlet data = range i from 1 to 1 step 1\r\n| project resource = todynamic(tolower(strcat('[', '{Vaults}', ']')))\r\n| mvexpand resource to typeof(string) limit 10000\r\n| join kind = fullouter (onboardedResources) on $left.resource == $right.ResourceId;\r\ndata\r\n| where isnotempty(resource) and isnotnull(resource)\r\n| project Status = iff(isnotempty(ResourceId), 'Collecting', 'Not collecting'), Resource = resource, Action = iff(ResourceId != '', 'View settings', 'Enable')\r\n",
        "size": 0,
        "title": "Key vaults with diagnostic logs collection",
        "noDataMessage": "No Key Vaults found in the selected subscriptions",
        "timeContext": {
          "durationMs": 2592000000
        },
        "queryType": 0,
        "resourceType": "{ResourceScope}",
        "crossComponentResources": [
          "{Vaults}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "Collecting",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "warning",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Resource",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Action",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "Resource",
                "linkTarget": "Resource",
                "subTarget": "diagnostics",
                "showIcon": true
              }
            }
          ],
          "filter": true
        }
      },
      "customWidth": "50",
      "name": "query - 4"
    },
    {
      "type": 1,
      "content": {
        "json": "For additional assistance on how to configure full monitoring coverage, visit the guide on how to [enable Azure Key Vault logging](https://docs.microsoft.com/azure/key-vault/key-vault-logging)."
      },
      "name": "text - 5"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
