{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "label": "Subscriptions",
            "type": 6,
            "description": "All subscriptions with virtual machines",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| project id = tolower(id), subscriptionId\r\n| join kind = leftouter (Resources\r\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and name =~ 'workload.linuxconfigagent'\r\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), Insight = tostring(tags[\"monitoring-insight\"])\r\n    | where Vm != '' and Insight == 'mssql'\r\n    ) on $left.id == $right.Vm\r\n| summarize Onboarded = countif(Vm != ''), All = count() by subscriptionId\r\n| order by Onboarded desc, All desc\r\n| extend Row = row_number()\r\n| project value = subscriptionId, label = subscriptionId, selected = Row == 1\r\n",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
            "version": "KqlParameterItem/1.0",
            "name": "Resources",
            "label": "All virtual machines",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = name, selected = false, group = resourceGroup",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "5e510131-51a9-40c0-b1a8-328932b5f46e",
            "version": "KqlParameterItem/1.0",
            "name": "OnboardedComputers",
            "label": "Monitored VMs",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": " Resources\n| where id in~ ({Resources})\n| project ['Virtual machine'] = tolower(id), Name = name, ['Resource group'] = strcat('/subscriptions/', subscriptionId, '/resourceGroups/', resourceGroup), Subscription = subscriptionId, Location = location,  OsType = iff(properties.osProfile.windowsConfiguration == '', 'Linux', 'Windows'), Offer = tostring(properties.storageProfile.imageReference.offer)\n| join kind = inner (Resources\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and name =~ 'workload.linuxconfigagent'\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), Insight = tostring(tags[\"monitoring-insight\"])\n    | where Vm != '' and Insight == 'mssql'\n    ) on $left.['Virtual machine'] == $right.Vm\n| project Name\n",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "619bf90b-5093-47cc-83a3-bf009257bc7d",
            "version": "KqlParameterItem/1.0",
            "name": "Workspaces",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\n| where id in~ ({Resources})\n| project ['Virtual machine'] = tolower(id), Name = name, ['Resource group'] = strcat('/subscriptions/', subscriptionId, '/resourceGroups/', resourceGroup), Subscription = subscriptionId, Location = location,  OsType = iff(properties.osProfile.windowsConfiguration == '', 'Linux', 'Windows'), Offer = tostring(properties.storageProfile.imageReference.offer)\n| join kind = inner (Resources\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and name =~ 'workload.linuxconfigagent'\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), Insight = tostring(tags[\"monitoring-insight\"])\n    | where Vm != '' and Insight == 'mssql'\n    ) on $left.['Virtual machine'] == $right.Vm\n| join kind = inner (Resources\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and properties.type == 'OmsAgentForLinux' and properties.publisher == 'Microsoft.EnterpriseCloud.Monitoring'\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), WorkspaceId = tostring(properties.settings.workspaceId)\n    | where Vm != ''\n    ) on $left.['Virtual machine'] == $right.Vm\n| project-away Vm, Vm1\n| join kind = leftouter (Resources\n| where type =~ 'microsoft.operationalinsights/workspaces'\n| project Workspace = id, location, WorkspaceId = tostring(properties.customerId)) on WorkspaceId\n| summarize by Workspace\n| project value = Workspace, label = Workspace, selected = true\n",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "e6598941-f9f5-4deb-bd0d-48658ade8297",
            "version": "KqlParameterItem/1.0",
            "name": "OnboardedComputerCount",
            "type": 1,
            "isRequired": true,
            "query": " Resources\n| where id in~ ({Resources})\n| project ['Virtual machine'] = tolower(id), Name = name, ['Resource group'] = strcat('/subscriptions/', subscriptionId, '/resourceGroups/', resourceGroup), Subscription = subscriptionId, Location = location,  OsType = iff(properties.osProfile.windowsConfiguration == '', 'Linux', 'Windows'), Offer = tostring(properties.storageProfile.imageReference.offer)\n| join kind = inner (Resources\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and name =~ 'workload.linuxconfigagent'\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), Insight = tostring(tags[\"monitoring-insight\"])\n    | where Vm != '' and Insight == 'mssql'\n    ) on $left.['Virtual machine'] == $right.Vm\n| project Name\n| count\n| project Count = tostring(Count)\n",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "label": "Onboarded computer count"
          },
          {
            "id": "8f9e3ccf-8531-4e91-b040-48f894187676",
            "version": "KqlParameterItem/1.0",
            "name": "SqlServers",
            "label": "Sql servers",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "InsightsMetrics\n| project Instance = tostring(todynamic(Tags).sql_instance)\n| summarize by Instance\n| where Instance <> '' \n\n",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "4908b8cf-7658-4356-9aa5-5dc5aca7a1aa",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            },
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "bb7b9387-0445-4ee2-9fc7-f52cb9f59e8c",
            "version": "KqlParameterItem/1.0",
            "name": "TotalComputers",
            "type": 1,
            "query": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| extend resourceGroupId = strcat('/subscriptions/', subscriptionId, '/resourceGroups/', resourceGroup)\n| count\n| project Count = tostring(Count)",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "label": "Total computer count"
          },
          {
            "id": "763c4b4e-d6f0-4666-b19f-6caf14a534fd",
            "version": "KqlParameterItem/1.0",
            "name": "SqlServerMapping",
            "type": 1,
            "query": "Resources\n| where type =~ 'microsoft.sql/servers'\n| summarize Data = tostring(makelist(pack('id', id, 'name', name), 10000))",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "label": "Sql mappings"
          },
          {
            "id": "4db95b3b-1e67-4e9c-87ec-6b4a38baf694",
            "version": "KqlParameterItem/1.0",
            "name": "OnboardingTemplate",
            "type": 1,
            "isRequired": true,
            "value": "Community-Workbooks/Workloads/Onboard MSSQL Insights",
            "isHiddenWhenLocked": true,
            "resourceType": "microsoft.insights/components",
            "label": "Onboarding template"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 0"
    },
    {
      "type": 1,
      "content": {
        "json": "*Virtual machines*\n# {OnboardedComputerCount} / {TotalComputers}\n*Remotely monitoring SQL Servers*"
      },
      "name": "text - 11"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Activities",
            "subTarget": "Activities",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Memory clerks",
            "subTarget": "Memory clerks",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Wait stats",
            "subTarget": "Wait stats",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Replicas",
            "subTarget": "Replicas",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "File sizes",
            "subTarget": "File sizes",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Transactions",
            "subTarget": "Transactions",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Database IO",
            "subTarget": "Database IO",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Alerts",
            "subTarget": "Alerts",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Sql counters",
            "subTarget": "Sql counters",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Enable monitoring",
            "subTarget": "Enable monitoring",
            "style": "link"
          }
        ]
      },
      "name": "links - 1",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace contains 'sqlserver_server_properties'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance in ({SqlServers}) or '*' in ({SqlServers})\r\n| where Name in ('db_online', 'db_offline', 'db_offline', 'db_recovering', 'db_recoveryPending', 'db_restoring', 'db_suspect');\r\nlet summary = data\r\n| summarize arg_max(TimeGenerated, Name, Val) by Name, DatabaseKey, Computer\r\n| extend Val = iff(TimeGenerated < ({TimeRange:end} - 15m), 0.0, Val)\r\n| summarize Val = sum(Val) by Name\r\n| project Name, Value = Val;\r\nlet trend = data\r\n| where Name != 'db_online'\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Name\r\n| union (data\r\n| where Name == 'db_online'\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Name);\r\nsummary\r\n| join kind = inner (trend) on Name\r\n| join kind = inner (datatable(Name:string, Rank:int)[\r\n'db_online', 1, 'db_offline', 2, 'db_recovering', 3, 'db_recoveryPending', 4, 'db_restoring', 5, 'db_suspect', 6\r\n]) on Name\r\n| order by Rank asc\r\n| project Name, Value, Trend\r\n| extend Name = case(\r\n   Name == 'db_online', 'Online databases',\r\n   Name == 'db_offline', 'Offline',\r\n   Name == 'db_recovering', 'Recovering',\r\n   Name == 'db_recoveryPending', 'Recovery pending',\r\n   Name == 'db_restoring', 'Restoring',\r\n   Name == 'db_suspect', 'Suspect',\r\n   Name\r\n)\r\n",
              "size": 4,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "tiles",
              "gridSettings": {
                "sortBy": [
                  {
                    "itemKey": "Name",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Name",
                  "sortOrder": 1
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "name": "query - 0"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let azuresqlservers = dynamic({SqlServerMapping});\r\nlet data = InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace contains 'sqlserver_server_properties'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance in ({SqlServers}) or '*' in ({SqlServers});\r\ndata\r\n| summarize arg_max(TimeGenerated, Val) by Name, Database, Instance, Computer\r\n| extend Val = iff(TimeGenerated < ({TimeRange:end} - 15m), real(null), Val)\r\n| summarize Online = sumif(Val, Name == 'db_online'),\r\n    Offline = sumif(Val, Name == 'db_offline'),\r\n    Recovering = sumif(Val, Name == 'db_recovering'),\r\n    ['Recovery pending'] = sumif(Val, Name == 'db_recoveryPending'),\r\n    Restoring = sumif(Val, Name == 'db_restoring'),\r\n    Suspect = sumif(Val, Name == 'db_suspect'),\r\n    CPUs = sumif(Val, Name == 'cpu_count'),\r\n    ['Server memory'] = sumif(Val, Name == 'server_memory'),\r\n    ['Total storage'] = sumif(Val, Name == 'total_storage_mb'),\r\n    ['Engine edition'] = sumif(Val, Name == 'engine_edition')\r\n  by Database, Instance, Computer\r\n| extend jkey = strcat(Instance, '/', Database)\r\n| join kind = inner (data\r\n    | where Name == 'db_online'\r\n    | make-series Trend = min(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Database, Instance\r\n    | extend jkey = strcat(Instance, '/', Database)\r\n   ) on jkey\r\n| join kind = leftouter (range i from 1 to 1 step 1\r\n    | extend d = dynamic({SqlServerMapping})\r\n    | mv-expand d\r\n    | project id = tostring(d.id), name = tostring(d.name)\r\n) on $left.Instance == $right.name\r\n| project ['Sql database'] = iff(id == '', strcat(Instance, '/', Database), strcat(id, '/databases/', Database)), ['Monitored by'] = Computer, Online, ['Online trend'] = Trend, Offline, Recovering, ['Recovery pending'], Restoring, Suspect, CPUs, ['Server memory'], ['Total storage'], ['Engine edition']\r\n",
              "size": 2,
              "showAnalytics": true,
              "title": "Server details",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_Online_2",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_Online_2",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Server details"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "OnboardedComputerCount",
          "comparison": "isNotEqualTo",
          "value": "0"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## The virtual machines in this scope are not configured to monitor remote SQL Servers."
            },
            "name": "text - 0",
            "styleSettings": {
              "margin": "20px 0 0 0"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "![Microsoft SQL Server logot](https://raw.githubusercontent.com/acearun/managedsolutions/master/Templates/DeployVme/sql-logo.jpg)\r\n"
            },
            "name": "text - 0 - Copy",
            "styleSettings": {
              "margin": "20px 0 15px 0"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "Use the **Enable monitoring** tab to configure machines to beging monitoring SQL Servers.\r\n"
            },
            "name": "text - 0 - Copy"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "OnboardedComputerCount",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "Onboarding message"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Name =~ 'User connections'\r\n| extend SeriesName = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "User connections",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 17,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "User connections"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Name =~ 'Transactions/sec'\r\n| extend SeriesName = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Transtions./sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Transtions/sec"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Name =~ 'Batch requests/sec'\r\n| extend SeriesName = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Batch requests/sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Batch requests per second"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Name =~ 'SQL compilations/sec'\r\n| extend SeriesName = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "SQL compilations/sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "SQL compilations/sec"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Name =~ 'SQL re-compilations/sec'\r\n| extend SeriesName = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "SQL re-compilations/sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "SQL re-compilations/sec"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Name =~ 'Processes blocked'\r\n| extend SeriesName = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Processes blocked",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 17,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Processes blocked"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Tags = todynamic(Tags)\r\n| extend Name = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where Name =~ 'Number of deadlocks/sec'\r\n| extend SeriesName = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SeriesName",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Number of deadlocks/sec",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "timechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Online",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "minimumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Online trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "green",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Offline|Recovering|Recovery pending|Restoring|Suspect",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "red",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "maximumSignificantDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Server memory",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 4,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Total storage",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 38,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              },
              "chartSettings": {
                "ySettings": {
                  "unit": 31,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "33",
            "showPin": true,
            "name": "Number of deadlocks/sec"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Activities"
      },
      "name": "Activities"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace contains 'sqlserver_memory_clerks'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance), ClerkType = tostring(Tags.clerk_type);\r\ndata\r\n| summarize arg_max(TimeGenerated, Val) by ClerkType, Database, Instance\r\n| extend Val = iff(TimeGenerated < ({TimeRange:end} - 15m), real(null), Val)\r\n| project Database = iff(Database == Instance, Database, strcat(Database, ' on ', Instance)), ClerkType, Size = Val\r\n| extend jkey = strcat(Database, '/', ClerkType)\r\n| join kind = inner (data\r\n    | make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ClerkType, Instance, Database\r\n    | project Database = iff(Database == Instance, Database, strcat(Database, ' on ', Instance)), ClerkType, Trend\r\n    | extend jkey = strcat(Database, '/', ClerkType)\r\n    ) on jkey\r\n| project Database, ClerkType, Size, ['Size trend'] = Trend\r\n\r\n",
              "size": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Database",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "ClerkType",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Size",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 3,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Size trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Database"
                  ],
                  "finalBy": "ClerkType"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_Size_3",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_Size_3",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Memory clerks by databases"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Memory clerks"
      },
      "name": "Memory clerks"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace in~ ('sqlserver_azuredb_waitstats', 'sqlserver_waitstats')\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags[\"database_name'\"]), Instance = tostring(Tags.sql_instance), WaitType = tostring(Tags.wait_type);\r\ndata\r\n| summarize arg_max(TimeGenerated, Val) by WaitType, Database, Instance\r\n| extend Val = iff(TimeGenerated < ({TimeRange:end} - 15m), real(null), Val)\r\n| project Database = iff(Database == Instance, Database, strcat(Database, ' on ', Instance)), WaitType, Size = Val\r\n| extend jkey = strcat(Database, '/', WaitType)\r\n| join kind = inner (data\r\n    | make-series Trend = sum(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by WaitType, Instance, Database\r\n    | project Database = iff(Database == Instance, Database, strcat(Database, ' on ', Instance)), WaitType, Trend\r\n    | extend jkey = strcat(Database, '/', WaitType)\r\n    ) on jkey\r\n| project Database, WaitType, Size, ['Size trend'] = Trend\r\n\r\n",
              "size": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Database",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "WaitType",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Size",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 3,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Size trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Database"
                  ],
                  "expandTopLevel": false,
                  "finalBy": "WaitType"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_Size_3",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_Size_3",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Wait types by database"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Wait stats"
      },
      "name": "Wait stats"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_performance' \r\n| extend Object = tostring(Tags.object)\r\n| where Object endswith 'availability replica'\r\n| extend Counter = tostring(Tags.counter), Database = tostring(Tags.database_name), Instance = tostring(Tags.instance), SqlInstance = tostring(Tags.sql_instance)\r\n| where Instance !~ 'Total';\r\ndata\r\n| summarize (t1, StartValue) = arg_min(TimeGenerated, Val), (t2, EndValue) = arg_max(TimeGenerated, Val) by Database, SqlInstance, Counter, Instance\r\n| project Value = EndValue - StartValue, Database, SqlInstance, Counter, Instance\r\n| summarize \r\n        SendsToTransportsPerSec = sumif(Value, Counter =~ 'Sends to Transport/sec'),\r\n        SendsToReplicasPerSec = sumif(Value, Counter =~ 'Sends to Replica/sec'),\r\n        ReceivesFromReplicasPerSec = sumif(Value, Counter =~ 'Receives from Replica/sec'),\r\n        ResentMessagesPerSec = sumif(Value, Counter =~ 'Resent Messages/sec'),\r\n        FlowControlPerSec = sumif(Value, Counter =~ 'Flow Control/sec'),\r\n        FlowControlTimeMsPerSec = sumif(Value, Counter =~ 'Flow Control Time (ms/sec)')\r\n    by SqlInstance, Database, Instance",
              "size": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "SqlInstance",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Instance",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "SendsTo.*|Receives.*",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 11,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "ResentMessagesPerSec",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "FlowControlPerSec",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "FlowControlTimeMsPerSec",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SqlInstance",
                    "Database"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "Instance"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_SendsTo.*|Receives.*_4",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "SqlInstance"
                  },
                  {
                    "columnId": "Database"
                  },
                  {
                    "columnId": "Instance"
                  },
                  {
                    "columnId": "SendsToTransportsPerSec",
                    "label": "Sends to transports"
                  },
                  {
                    "columnId": "SendsToReplicasPerSec",
                    "label": "Sendsv to replicas"
                  },
                  {
                    "columnId": "ReceivesFromReplicasPerSec",
                    "label": "Receives from replocas"
                  },
                  {
                    "columnId": "ResentMessagesPerSec",
                    "label": "Resent messages"
                  },
                  {
                    "columnId": "FlowControlPerSec",
                    "label": "Flow control"
                  },
                  {
                    "columnId": "FlowControlTimeMsPerSec",
                    "label": "Flow control time (ms/sec)"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_SendsTo.*|Receives.*_4",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Replicas"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Replicas"
      },
      "name": "Replicas"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_performance' and tostring(Tags.object) endswith ':Databases' and tostring(Tags.instance) !~ 'total'\r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), Counter = tostring(Tags.counter), DbInstance = tostring(Tags.instance)\r\n| summarize arg_max(TimeGenerated, Val) by Counter, Database, SqlInstance, DbInstance\r\n| extend Database = iff(Database == SqlInstance, Database, strcat(Database, ' on ', SqlInstance))\r\n| extend Val = iff(TimeGenerated < ({TimeRange:end} - 15m), real(null), Val)\r\n| summarize \r\n        DataFilesSize = sumif(Val, Counter == 'Data File(s) Size (KB)'),\r\n        LogFilesSize = sumif(Val, Counter == 'Log File(s) Size (KB)'),\r\n        LogFilesUsedSize = sumif(Val, Counter == 'Log File(s) Used Size (KB)'),\r\n        PercentLogUsed = sumif(Val, Counter == 'Percent Log Used'),\r\n        XTPMemoryUsed = sumif(Val, Counter == 'XTP Memory Used (KB)')\r\n    by Database, DbInstance\r\n\r\n",
              "size": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Database",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "DbInstance",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "DataFilesSize|LogFilesSize|LogFilesUsedSize",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 3,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "PercentLogUsed",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "orange",
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "XTPMemoryUsed",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 3,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Database"
                  ],
                  "expandTopLevel": false,
                  "finalBy": "DbInstance"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_DataFilesSize|LogFilesSize|LogFilesUsedSize_3",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Database"
                  },
                  {
                    "columnId": "DbInstance"
                  },
                  {
                    "columnId": "DataFilesSize",
                    "label": "Data file(s) size"
                  },
                  {
                    "columnId": "LogFilesSize",
                    "label": "Log file(s) size"
                  },
                  {
                    "columnId": "LogFilesUsedSize",
                    "label": "Data file(s) used size"
                  },
                  {
                    "columnId": "PercentLogUsed",
                    "label": "Percent log used"
                  },
                  {
                    "columnId": "XTPMemoryUsed",
                    "label": "XTP memory used"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_DataFilesSize|LogFilesSize|LogFilesUsedSize_3",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "File sizes"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "File sizes"
      },
      "name": "File sizes"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_performance' and tostring(Tags.object) endswith ':Databases' and tostring(Tags.instance) !~ 'total'\r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), Counter = tostring(Tags.counter), DbInstance = tostring(Tags.instance)\r\n| summarize arg_max(TimeGenerated, Val) by Counter, Database, SqlInstance, DbInstance\r\n| extend Database = iff(Database == SqlInstance, Database, strcat(Database, ' on ', SqlInstance))\r\n| extend Val = iff(TimeGenerated < ({TimeRange:end} - 15m), real(null), Val)\r\n| summarize \r\n        TransactionsPerSec = sumif(Val, Counter == 'Transactions/sec'),\r\n        WriteTransactionsPerSec = sumif(Val, Counter == 'Write Transactions/sec'),\r\n        LogFlushesPerSec = sumif(Val, Counter == 'Log Flushes/sec'),\r\n        LogBytesFlushedPerSec = sumif(Val, Counter == 'Log Bytes Flushed/sec'),\r\n        LogFlushWaitTime = sumif(Val, Counter == 'Log Flush Wait Time')\r\n    by Database, DbInstance\r\n\r\n",
              "size": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Database",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "DbInstance",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "TransactionsPerSec|WriteTransactionsPerSec",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogFlushesPerSec",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogBytesFlushedPerSec",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogFlushWaitTime",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 0,
                    "formatOptions": {
                      "showIcon": true
                    },
                    "numberFormat": {
                      "unit": 31,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Database"
                  ],
                  "expandTopLevel": false,
                  "finalBy": "DbInstance"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_TransactionsPerSec|WriteTransactionsPerSec_2",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Database"
                  },
                  {
                    "columnId": "DbInstance"
                  },
                  {
                    "columnId": "TransactionsPerSec",
                    "label": "Transactions/sec"
                  },
                  {
                    "columnId": "WriteTransactionsPerSec",
                    "label": "Write transactions/sec"
                  },
                  {
                    "columnId": "LogFlushesPerSec",
                    "label": "Log flushes/ses"
                  },
                  {
                    "columnId": "LogBytesFlushedPerSec",
                    "label": "Log bytes flushed/sec"
                  },
                  {
                    "columnId": "LogFlushWaitTime",
                    "label": "Log flush wait time"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_TransactionsPerSec|WriteTransactionsPerSec_2",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Transactions"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Transactions"
      },
      "name": "Transactions"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_database_io'\r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), FileType = tostring(Tags.file_type)\r\n| summarize arg_max(TimeGenerated, Val) by Name, Database, SqlInstance, FileType\r\n| extend Val = iff(TimeGenerated < ({TimeRange:end} - 15m), real(null), Val)\r\n| summarize\r\n        DataReadBytes = sumif(Val, Name == 'read_bytes' and FileType == 'DATA'),\r\n        DataWriteBytes = sumif(Val, Name == 'write_bytes' and FileType == 'DATA'),\r\n        DataReadLatency = sumif(Val, Name == 'read_latency_ms' and FileType == 'DATA'),\r\n        DataWriteLatency = sumif(Val, Name == 'write_latency_ms' and FileType == 'DATA'),\r\n        LogReadBytes = sumif(Val, Name == 'read_bytes' and FileType == 'LOG'),\r\n        LogWriteBytes = sumif(Val, Name == 'write_bytes' and FileType == 'LOG'),\r\n        LogReadLatency = sumif(Val, Name == 'read_latency_ms' and FileType == 'LOG'),\r\n        LogWriteLatency = sumif(Val, Name == 'write_latency_ms' and FileType == 'LOG')\r\n    by SqlInstance, Database\r\n",
              "size": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "SqlInstance",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 5,
                    "formatOptions": {
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "DataReadBytes|DataWriteBytes",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "DataReadLatency|DataWriteLatency",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "showIcon": true,
                      "aggregation": "Max"
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogReadBytes|LogWriteBytes",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "showIcon": true,
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogReadLatency|LogWriteLatency",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "showIcon": true,
                      "aggregation": "Max"
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SqlInstance"
                  ],
                  "finalBy": "Database"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_DataReadBytes|DataWriteBytes_3",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "SqlInstance"
                  },
                  {
                    "columnId": "Database"
                  },
                  {
                    "columnId": "DataReadBytes",
                    "label": "Data read bytes"
                  },
                  {
                    "columnId": "DataWriteBytes",
                    "label": "Data write bytes"
                  },
                  {
                    "columnId": "DataReadLatency",
                    "label": "Data read latency"
                  },
                  {
                    "columnId": "DataWriteLatency",
                    "label": "Data write latency"
                  },
                  {
                    "columnId": "LogReadBytes",
                    "label": "Log read bytes"
                  },
                  {
                    "columnId": "LogWriteBytes",
                    "label": "Log write bytes"
                  },
                  {
                    "columnId": "LogReadLatency",
                    "label": "Log read latency"
                  },
                  {
                    "columnId": "LogWriteLatency",
                    "label": "Log write latency"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_DataReadBytes|DataWriteBytes_3",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Transactions"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Database IO"
      },
      "name": "Database IO"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Workloads/Explore metrics group",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Sql counters"
      },
      "name": "Sql counters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "d99b3e86-2216-45cf-9f58-cc1c808241bf",
                  "version": "KqlParameterItem/1.0",
                  "name": "SuggestedAlerts",
                  "type": 1,
                  "isRequired": true,
                  "value": "[     {         \"AlertName\": \"SQL-deadlocks-per-sec\",         \"AlertDescription\": \"Fires when SQL deadlocks are detected\",         \"AlertThreshold\": 0,         \"AlertTemplate\": \"https://raw.githubusercontent.com/acearun/managedsolutions/master/Templates/Alerts/Sql/sql-deadlocks-per-second/azuredeploy.json\"     },     {         \"AlertName\": \"SQL-processes-blocked\",         \"AlertDescription\": \"Fires when blocked SQL processes are detected\",         \"AlertThreshold\": 0,         \"AlertTemplate\": \"https://raw.githubusercontent.com/acearun/managedsolutions/master/Templates/Alerts/Sql/sql-processes-blocked/azuredeploy.json\"     },     {         \"AlertName\": \"SQL-memory-grants-pending\",         \"AlertDescription\": \"Fires when pending memory grants are detected\",         \"AlertThreshold\": 0,         \"AlertTemplate\": \"https://raw.githubusercontent.com/acearun/managedsolutions/master/Templates/Alerts/Sql/sql-memory-grants-pending/azuredeploy.json\"     } ]",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "resourceType": "microsoft.insights/components"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "template",
              "loadFromTemplateId": "Community-Workbooks/Workloads/Alerts group",
              "items": []
            },
            "name": "group - 1"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Alerts"
      },
      "name": "Alerts group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Workloads/Enable monitoring group",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Enable monitoring"
      },
      "name": "Enable monitoring group"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}