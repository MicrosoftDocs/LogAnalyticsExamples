{
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json",
  "version": "Notebook/1.0",
  "isLocked": true,
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Troubleshooting Dependency Failures\nThis troubleshooting guide helps you identify failures in your application's dependencies. "
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "eac9cbf1-6364-4f28-9c61-a9b038c035d7",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "description": null,
            "isRequired": true,
            "isHiddenWhenLocked": false,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000,
                  "createdTime": "2018-06-04T19:27:14.510Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 900000,
                  "createdTime": "2018-06-04T19:27:14.510Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 1800000,
                  "createdTime": "2018-06-04T19:27:14.510Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 3600000,
                  "createdTime": "2018-06-04T19:27:14.510Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 14400000,
                  "createdTime": "2018-06-04T19:27:14.510Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 43200000,
                  "createdTime": "2018-06-04T19:27:14.510Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 86400000,
                  "createdTime": "2018-06-04T19:27:14.511Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 172800000,
                  "createdTime": "2018-06-04T19:27:14.511Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 259200000,
                  "createdTime": "2018-06-04T19:27:14.511Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 604800000,
                  "createdTime": "2018-06-04T19:27:14.511Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 1209600000,
                  "createdTime": "2018-06-04T19:27:14.511Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                },
                {
                  "durationMs": 2419200000,
                  "createdTime": "2018-06-04T19:27:14.511Z",
                  "isInitialTime": false,
                  "grain": 1,
                  "useDashboardTimeRange": false
                }
              ],
              "allowCustom": false
            },
            "value": {
              "durationMs": 86400000,
              "createdTime": "2018-06-04T19:27:14.511Z",
              "isInitialTime": false,
              "grain": 1,
              "useDashboardTimeRange": false
            }
          },
          {
            "id": "6ab5c1cb-bad0-4d96-8e63-d439d0681c6e",
            "version": "KqlParameterItem/1.0",
            "name": "Dependencies",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "dependencies\n| where timestamp {TimeRange}\n| summarize Count = count(), Users = dcount(user_Id) by name\n| order by name asc\n| project v = name, t = name, s=false\n| union (datatable(v:string, t:string, s:boolean)[\n'*', 'All Dependencies', true\n])",
            "isHiddenWhenLocked": false,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "5e558db3-501c-4ce3-87c3-7f13a469fd54",
            "version": "KqlParameterItem/1.0",
            "name": "ResultCodes",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "datatable(x:string, y:string, z:boolean)[\r\n'*', 'All', true,\r\n'@', 'All 500s', false,\r\n'#', 'All 400s', false\r\n]\r\n| union (dependencies\r\n| where timestamp {TimeRange}\r\n| where success == false\r\n| summarize by resultCode\r\n| order by resultCode asc\r\n| project x = resultCode, y = resultCode, z = false)",
            "isHiddenWhenLocked": false,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "84caf619-7585-48e0-a9c3-85c364aaa13b",
            "version": "KqlParameterItem/1.0",
            "name": "Show",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(x:string, y:string)[\r\n\"['New Failure Rate (%)'], ['Existing Failure Rate (%)']\", 'New and Existing Failures',\r\n\"['New Failure Rate (%)']\", 'Only New Failures',\r\n\"['Existing Failure Rate (%)']\", 'Only Existing Failures',\r\n]",
            "value": "['New Failure Rate (%)'], ['Existing Failure Rate (%)']"
          },
          {
            "id": "6f0de137-0136-48f0-b463-640de7109c05",
            "version": "KqlParameterItem/1.0",
            "name": "UseComparisonTimeRangeOf",
            "type": 1,
            "description": null,
            "isRequired": true,
            "query": "let t = todatetime({TimeRange:end}) - todatetime({TimeRange:start});\r\nlet w = case(t <= 1d, '7d', t <= 3d, '14d', t <= 14d, '28d', '60d');\r\nrange i from 1 to 1 step 1\r\n| project x = w",
            "isHiddenWhenLocked": false,
            "resourceType": "microsoft.insights/components",
            "value": "14d"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "Set the parameters above to tune your analysis set. Use the `Show` parameter above to see only existing or new failures. The comparision `UseComparisionTimeRange` parameter sets the window of time to look for existing failures. `Dependencies` and `ResultCodes` parameters allow you filter down to a smaller set of issues."
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Failure Trend\nThe chart below shows the trend of dependency failures over your chosen time range. It is split by new and existing failures. "
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let bigWindow = dependencies\r\n| where timestamp >= {TimeRange:start} - {UseComparisonTimeRangeOf} and timestamp <= {TimeRange:start}\r\n| where success == false\r\n| where name in ({Dependencies}) or '*' in ({Dependencies})\r\n| where resultCode in ({ResultCodes}) or '*' in ({ResultCodes}) or iff('@' in ({ResultCodes}), resultCode startswith '5', false) or iff('#' in ({ResultCodes}), resultCode startswith '4', false)\r\n| summarize by name, resultCode\r\n| summarize makelist(strcat(name, '-', resultCode), 100000);\r\nlet data = dependencies\r\n| where timestamp {TimeRange}\r\n| where name in ({Dependencies}) or '*' in ({Dependencies})\r\n| where resultCode in ({ResultCodes}) or '*' in ({ResultCodes}) or iff('@' in ({ResultCodes}), resultCode startswith '5', false) or iff('#' in ({ResultCodes}), resultCode startswith '4', false)\r\n| where success == false;\r\ndata\r\n| extend IsNew = strcat(name, '-', resultCode) !in (bigWindow)\r\n| where \"{Show}\" == \"['New Failure Rate (%)'], ['Existing Failure Rate (%)']\" or IsNew == true\r\n| make-series Count = count()  default = 0 on timestamp in range({TimeRange:start}, now(), {TimeRange:grain}) by ['Failure'] = iff(IsNew, 'New Failure', 'Existing Failure')\r\n\r\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 0,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Failure Details"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "\nðŸ”¸ New Failure ðŸ”¹ Existing Failure"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let bigWindow = dependencies\n| where timestamp >= {TimeRange:start} - {UseComparisonTimeRangeOf} and timestamp <= {TimeRange:start}\n| where success == false\n| where name in ({Dependencies}) or '*' in ({Dependencies})\n| where resultCode in ({ResultCodes}) or '*' in ({ResultCodes}) or iff('@' in ({ResultCodes}), resultCode startswith '5', false) or iff('#' in ({ResultCodes}), resultCode startswith '4', false)\n| summarize by name, resultCode\n| summarize makelist(strcat(name, '-', resultCode), 100000);\nlet data = dependencies\n| where timestamp {TimeRange}\n| where name in ({Dependencies}) or '*' in ({Dependencies})\n| where resultCode in ({ResultCodes}) or '*' in ({ResultCodes}) or iff('@' in ({ResultCodes}), resultCode startswith '5', false) or iff('#' in ({ResultCodes}), resultCode startswith '4', false)\n| where success == false;\ndata\n| summarize Count = count(), Users = dcount(user_Id) by name, resultCode\n| extend IsNew = strcat(name, '-', resultCode) !in (bigWindow)\n| where \"{Show}\" == \"['New Failure Rate (%)'], ['Existing Failure Rate (%)']\" or IsNew == true\n| join kind=inner (data\n    | make-series Trend = count() default = 0 on timestamp in range({TimeRange:start}, now(), {TimeRange:grain}) by name\n    | project name, Trend\n    ) on name\n| order by Users desc, Count desc, name asc\n| project ['Dependency Name'] = iff(IsNew, strcat('ðŸ”¸ ', name), strcat('ðŸ”¹ ', name)), ['Failed with Result Code'] = resultCode, ['Failures'] = Count, ['Users Affected'] = Users, ['Trend'] = Trend\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 2,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Failures",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Users Affected",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "blue"
              }
            },
            {
              "columnMatch": "Trend",
              "formatter": 9,
              "formatOptions": {
                "min": 0,
                "max": null,
                "palette": "greenRed"
              }
            }
          ]
        }
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Mitigation\nUse this section to list out the recovery steps for known issues. This allows sharing of information with future issue investigators. "
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Customizing your Troubleshooting Guide\n```\n1. Start editing this TSG by clicking on the 'Edit' button on the toolbar on top. \n2. Use the edit buttons on bottom-right of markdown control to update it's contents. \n3. Update the parameters to tune your analysis set.\n4. You can also update the underlying query or grid properties to personalize the analysis/view.\n5. If you want to have two sections for different performance counters, use the clone button at the bottom toolbar of a control. Use the â†‘ or â†“ buttons to move the controls up or down.\n```\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    }
  ]
}